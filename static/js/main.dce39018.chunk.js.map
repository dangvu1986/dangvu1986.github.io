{"version":3,"sources":["../node_modules/n3/lib sync /^/N3.*$","Actions/actionTypes.ts","config.ts","Reducers/accountReducer.ts","Reducers/dialogsReducer.ts","Reducers/itemsReducer.ts","Reducers/pathReducer.ts","Reducers/uploadReducer.ts","Reducers/reducer.ts","Reducers/currentBlobReducer.ts","Reducers/errorReducer.ts","Reducers/loadingReducer.ts","serviceWorker.ts","Api/Item.ts","Api/folderUtils.ts","Api/Api.ts","Api/ApiHandler.ts","Api/ApiCache.ts","Actions/Actions.ts","Components/File/File.tsx","Components/FileList/FileListEmptyMessage.tsx","Components/Loader/Loader.tsx","Components/FileList/FileList.tsx","Components/ContextMenu/ContextMenuActions/CreateFolderAction.tsx","Components/ContextMenu/ContextMenuActions/CreateFileAction.tsx","Components/ContextMenu/ContextMenuActions/UploadFileAction.tsx","Components/ContextMenu/ContextMenuActions/ChooseLocationAction.tsx","Components/Navbar/ThreeDotsMenu.tsx","Components/Breadcrumb/BreadcrumbText.tsx","Components/Navbar/Navbar.tsx","Components/ContextMenu/ContextMenuActions/OpenAction.tsx","Components/ContextMenu/ContextMenuActions/RemoveAction.tsx","Components/ContextMenu/ContextMenuActions/MoveAction.tsx","Components/ContextMenu/ContextMenuActions/CopyAction.tsx","Components/ContextMenu/ContextMenuActions/EditAction.tsx","Components/ContextMenu/ContextMenuActions/RenameAction.tsx","Components/ContextMenu/ContextMenuActions/ZipAction.tsx","Components/ContextMenu/ContextMenuActions/ExtractAction.tsx","Components/ContextMenu/ContextMenuActions/DownloadAction.tsx","Components/ContextMenu/ContextMenuActions/OpenInNewTabAction.tsx","Components/ContextMenu/ContextMenu.tsx","Components/HistoryHandler/HistoryHandler.tsx","Components/Dialogs/Menu/Menu.tsx","Components/Dialogs/Content/Content.tsx","Components/Dialogs/Media/Media.tsx","Components/Dialogs/Edit/Edit.tsx","Components/Dialogs/CreateFolder/CreateFolder.tsx","Components/Dialogs/CreateFile/CreateFile.tsx","Components/Dialogs/Rename/Rename.tsx","Components/File/FileSublist/FileSublist.tsx","Components/FileList/FileListSublist/FileListSublist.tsx","Components/Dialogs/ChooseLocation/ChooseLocation.tsx","Components/Dialogs/Move/Move.tsx","Components/Dialogs/Copy/Copy.tsx","Components/FileUploader/UploadFileList.tsx","Components/FileUploader/FileUploader.tsx","Components/Dialogs/UploadFile/UploadFile.tsx","Components/Dialogs/Dialogs.tsx","Components/Notification/DynamicSnackbar.tsx","App.tsx","index.tsx"],"names":["map","./N3Lexer","./N3Lexer.js","./N3Parser","./N3Parser.js","./N3Store","./N3Store.js","./N3StreamParser","./N3StreamParser.js","./N3StreamWriter","./N3StreamWriter.js","./N3Util","./N3Util.js","./N3Writer","./N3Writer.js","webpackContext","req","id","webpackContextResolve","__webpack_require__","e","Error","code","keys","Object","resolve","module","exports","DIALOGS","host","config","getHost","setHost","newHost","endsWith","slice","initialState","loggedIn","webId","initialVisibleDialogs","values","name","defineProperty","reduce","prev","cur","objectSpread","initialContextMenuState","open","x","y","initialItemsState","inCurFolder","filter","selected","removeItem","items","item","selectedItem","equals","addItem","concat","toConsumableArray","initialPath","initialUploadState","fileList","progress","rootReducer","combineReducers","account","state","arguments","length","undefined","action","type","value","blob","URL","createObjectURL","revokeObjectURL","contextMenu","visibleDialogs","errorMessage","includes","loading","path","upload","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","Item","url","size","classCallCheck","this","_name","_path","_url","_size","getPathFromUrl","pop","createClass","key","every","val","index","decodeURI","getHumanFileSize","get","FileItem","_Item","possibleConstructorReturn","getPrototypeOf","apply","inherits","patterns","image","test","media","editable","extractable","video","FolderItem","_Item2","byteString","bytes","parseInt","Math","pow","toFixed","urlString","pathname","split","getFolderItems","graph","subj","files","folders","each","rdflib","forEach","subjectName","subjectNode","nsSize","any","getSizeByGraph","baseUrl","folderNode","isAnInstanceOfClass","types","some","_ref","isFolder","push","text2graph","_x","_x2","_text2graph","_callee","text","contentType","_args","regenerator_default","a","wrap","_context","next","guessFileType","abrupt","Promise","reject","stop","ext","replace","fetchFile","_fetchFile","fileName","buildFileUrl","solidAuth","assertSuccessfulResponse","fetchFolder","_x3","_x4","_fetchFolder","_callee2","folderName","_context2","buildFolderUrl","headers","Accept","readFolder","_x5","_x6","_readFolder","_callee3","response","folderRDF","folderItems","_context3","sent","folderUtils","_callee4","destination","itemNames","_context4","copyItems","removeItems","_callee5","oldName","newName","_context5","copyFile","_callee6","oldFolderName","newFolderName","_context6","copyFolder","removeFolderRecursively","_x16","_x17","_x18","_copyItems","_callee7","promises","_context7","_ref2","_ref3","_ref4","_ref5","all","Response","_x19","_x20","_x21","_x22","_copyFile","_callee8","originPath","originName","destinationPath","destinationName","fileResponse","content","_context8","createFile","_x23","_x24","_x25","_x26","_copyFolder","_callee9","_ref6","_context9","createFolder","_ref7","_ref8","_callee10","_context10","Array","from","file","updateFile","_x29","_x30","_createFolder","_callee11","_context11","folderExists","createItem","Blob","_x31","_x32","_x33","_updateFile","_callee12","_context12","_x34","_x35","_x36","_createFile","_callee13","_context13","_callee14","itemName","link","request","_context14","method","slug","Content-Type","body","_x41","_x42","_removeItems","_callee15","_context15","_x43","_x44","_removeItem","_callee16","_context16","status","_x45","_x46","_removeFolderRecursively","_callee17","_context17","removeFolderContents","_x47","_x48","_removeFolderContents","_callee18","folderPath","_ref9","_context18","_ref10","_ref11","_x49","_x50","_folderExists","_callee19","_context19","t0","ok","cache","_data","itemList","hasOwnProperty","_this","_len","paths","_key","contains","handleFetchError","asyncToGenerator","mark","detailedErrorMessage","displayErrorMessage","displayMessages","group","401","403","404","500","message","stack","JSON","stringify","groupEnd","fixPath","getItemList","API","add","getFileBlob","filename","renameFile","newFileName","remove","_x10","_x11","_x12","_renameFile","renameFolder","_x13","_x14","_x15","_renameFolder","trim","moveItems","filenames","_x7","_x8","_x9","_moveItems","uploadFiles","_x27","_x28","_upload","getAsZip","zip","JSZip","addItemsToZip","zipFolder","folder","binary","extractZipArchive","_args3","loadAsync","uploadExtractedZipArchive","curFolder","_args5","getItemsInZipFolder","relativePath","getItemNameFromPath","getParentPathFromPath","dir","async","substr","lastIndexOf","solidLogin","dispatch","getState","displayLoading","solidPopupLogin","session","updateLoginStatus","r","setErrorMessage","String","finally","stopLoading","setWebId","setLoggedIn","setLoggedOut","resetWebId","popupUri","clearCache","clear","displayCurrentItemList","resetSelectedItems","APIHandler","join","setItems","refreshItemList","promptDownload","msSaveOrOpenBlob","document","createElement","href","download","appendChild","click","setTimeout","removeChild","getFileContent","resetFileContent","setFileContent","loadAndEditFile","openDialog","EDIT","loadAndDisplayFile","CONTENT","displaySelectedMediaFile","MEDIA","f","targetPath","closeDialog","COPY","setSelectedItemsFromLastTo","lastFile","_getState16$items","selectedItems","lastPreviouslySelected","lastPreviouslySelectedIndex","indexOf","lastSelectedIndex","isInRange","num","start","end","toAdd","selectItems","resetFileUploader","setFileUploadProgress","UPLOAD_FILE","resetFileUploadList","enterFolder","setPath","resetFilter","enterFolderByItem","makeActionCreator","moveFolderUpwards","resetPath","resetItems","selectItem","toggleSelectedItem","filterItems","setFileUploadList","openContextMenu","closeContextMenu","File","_this$props","props","isSelected","handleClick","handleDoubleClick","handleContextMenu","avatarStyle","backgroundColor","blue","realSize","getDisplaySize","react_default","className","onClick","onDoubleClick","onContextMenu","data-selected","ListItem_default","ListItemAvatar_default","Avatar_default","style","InsertDriveFile_default","Folder_default","ListItemText_default","primary","getDisplayName","secondary","Component","connect","ownProps","isEditable","isImage","isMedia","event","preventDefault","stopPropagation","nativeEvent","MouseEvent","clientX","clientY","TouchEvent","touches","pageX","pageY","warn","shiftKey","ctrlKey","FileListEmptyMessage","withStyles","theme","createStyles","margin","spacing","unit","Grid_default","container","justify","CircularProgress_default","classes","color","FileList","isLoading","itemComponents","Components_File_File","Loader_Loader","FileListEmptyMessage_FileListEmptyMessage","filterMatch","first","second","toLocaleLowerCase","CREATE_FOLDER","callback","handleClose","MenuItem_default","ListItemIcon_default","CreateNewFolder_default","Typography_default","variant","CREATE_FILE","CloudUpload_default","CHOOSE_LOCATION","FolderSharedOutlined_default","ThreeDotsMenu","anchorEl","setState","currentTarget","marginLeft","IconButton_default","aria-label","aria-owns","aria-haspopup","MoreVert_default","Menu_default","onClose","ContextMenuActions_CreateFolderAction","ContextMenuActions_CreateFileAction","ContextMenuActions_UploadFileAction","ContextMenuActions_ChooseLocationAction","React","BreadcrumbText","handleClickPath","rootTitle","handleGoBack","canGoBack","separator","rootPath","data-index","lastPath","directories","Button_default","display","KeyboardArrowLeft_default","breakpoints","up","root","width","marginBottom","grow","flexGrow","menuButton","marginRight","title","search","position","borderRadius","shape","fade","palette","common","white","&:hover","searchIcon","height","pointerEvents","alignItems","justifyContent","inputRoot","inputInput","paddingTop","paddingRight","paddingBottom","paddingLeft","transition","transitions","create","&:focus","handleChange","moveUpwards","n","moveFolderUpwardsAndRefresh","handleRefresh","AppBar_default","Toolbar_default","noWrap","Components_Breadcrumb_BreadcrumbText","Search_default","InputBase_default","placeholder","onChange","input","Refresh_default","Navbar_ThreeDotsMenu","OpenInBrowser_default","Delete_default","MOVE","HowToVote_default","FileCopy_default","RENAME","WrapText_default","archiveName","generateAsync","Archive_default","Unarchive_default","_getState8","downloadName","CloudDownload_default","Link_default","ContextMenu","acts","anchorReference","anchorPosition","top","left","transformOrigin","vertical","horizontal","PaperProps","ContextMenuActions_OpenAction","ContextMenuActions_OpenInNewTabAction","ContextMenuActions_DownloadAction","ContextMenuActions_ZipAction","ContextMenuActions_ExtractAction","EditAction","ContextMenuActions_CopyAction","ContextMenuActions_MoveAction","RenameAction","ContextMenuActions_RemoveAction","getActionsForMultipleItems","getActionsForItem","getActionsForFile","getActionsForFolder","actions","isExtractable","HistoryHandler","call","history","states","stateIndex","createBrowserHistory","listen","handlePop","handleReplace","handlePush","updateBrowserHistory","prevState","locationsEqual","_this$props2","encodeURI","newState","Fragment","getLocationObjectFromUrl","origin","_location$state","URLSearchParams","_getLocationObjectFro","FormDialog","isLoggedIn","encodedUrl","targetForm","form","querySelector","handleSubmit","handleLogin","handleLogout","Dialog_default","aria-labelledby","fullWidth","maxWidth","DialogTitle_default","DialogContent_default","gutterBottom","TextField_default","autoFocus","label","bind","DialogActions_default","lastBlobUrl","blobUrl","src","alt","isVideo","react_plyr_lib_default","iconUrl","textField","createRef","_this2","fetch","t","current","textArea","minHeight","defaultValue","ref","DialogContentText_default","handleSave","updateTextFile","inputRef","createNewFolder","find","previousName","FileSublist","FileListSublist","handleOpenFolder","FileSublist_FileSublist","initialHost","prevProps","updateItems","ApiHandler","actionName","_this$state","FileList_FileListSublist_FileListSublist","disabled","move","targetLocation","ChooseLocation","copy","UploadFileList","list","i","dense","List_default","component","FileUploader","inputElement","handleReset","handleSelectedFiles","styles","inputfile","inputreset","htmlFor","multiple","FileUploader_UploadFileList","canUpload","Components_FileUploader_FileUploader","LinearProgress_default","_getState","target","Dialogs","Menu_Menu","Content","Media","Edit","CreateFolder","CreateFile","Move","Copy","Rename","UploadFile","DynamicSnackbar","errorMsg","notificationDuration","Snackbar_default","anchorOrigin","autoHideDuration","ContentProps","aria-describedby","close","Close_default","padding","createMuiTheme","typography","useNextVariants","App","init","core_styles","handleHideContextMenu","Navbar","Components_FileList_FileList","Components_ContextMenu_ContextMenu","Notification_DynamicSnackbar","Dialogs_Dialogs","Components_HistoryHandler_HistoryHandler","element","tagName","store","createStore","reducer","applyMiddleware","thunk","ReactDOM","render","react_redux_es","src_App","getElementById","process","addEventListener","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.dce39018.chunk.js","sourcesContent":["var map = {\n\t\"./N3Lexer\": 113,\n\t\"./N3Lexer.js\": 113,\n\t\"./N3Parser\": 114,\n\t\"./N3Parser.js\": 114,\n\t\"./N3Store\": 149,\n\t\"./N3Store.js\": 149,\n\t\"./N3StreamParser\": 150,\n\t\"./N3StreamParser.js\": 150,\n\t\"./N3StreamWriter\": 158,\n\t\"./N3StreamWriter.js\": 158,\n\t\"./N3Util\": 115,\n\t\"./N3Util.js\": 115,\n\t\"./N3Writer\": 120,\n\t\"./N3Writer.js\": 120\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 261;","import { Item } from \"../Api/Item\";\r\n\r\nexport interface Action<V> {\r\n    type: string;\r\n    value: V;\r\n};\r\n\r\nexport const SET_ERROR_MESSAGE = 'SET_ERROR_MESSAGE';\r\nexport const ENTER_FOLDER = 'ENTER_FOLDER';\r\nexport const MOVE_FOLDER_UPWARDS = 'MOVE_FOLDER_UPWARDS';\r\nexport const SET_PATH = 'SET_PATH';\r\n\r\nexport const SET_LOGGED_IN = 'SET_LOGGED_IN';\r\nexport const SET_LOGGED_OUT = 'SET_LOGGED_OUT';\r\nexport const RESET_HOST = 'RESET_HOST';\r\nexport const SET_HOST = 'SET_HOST'; // TODO: Consider renaming to BASE_URL\r\nexport const RESET_WEB_ID = 'RESET_WEB_ID';\r\nexport const SET_WEB_ID = 'SET_WEB_ID';\r\n\r\nexport const SET_ITEMS = 'SET_ITEMS';\r\n\r\nexport const SELECT_ITEMS = 'SELECT_ITEMS';\r\nexport const TOGGLE_SELECTED_ITEM = 'TOGGLE_SELECTED_ITEM';\r\nexport const DESELECT_ITEM = 'DESELECT_ITEM';\r\n\r\nexport const FILTER_ITEMS = 'FILTER_ITEMS';\r\nexport const RESET_FILTER = 'REMOVE_FILTER';\r\n\r\nexport const DISPLAY_LOADING = 'DISPLAY_LOADING';\r\nexport const STOP_LOADING = 'STOP_LOADING';\r\n\r\nexport const RESET_LOADED_BLOB = 'RESET_LOADED_BLOB';\r\nexport const SET_LOADED_BLOB = 'SET_LOADED_BLOB';\r\n\r\nexport const SET_UPLOAD_FILE_PROGRESS = 'SET_UPLOAD_FILE_PROGRESS';\r\nexport const SET_UPLOAD_FILE_LIST = 'SET_UPLOAD_FILE_LIST';\r\n\r\nexport const OPEN_CONTEXT_MENU = 'OPEN_CONTEXT_MENU';\r\nexport const CLOSE_CONTEXT_MENU = 'CLOSE_CONTEXT_MENU';\r\n\r\nexport const OPEN_DIALOG = 'OPEN_DIALOG';\r\nexport const CLOSE_DIALOG = 'CLOSE_DIALOG';\r\n\r\nexport enum DIALOGS {\r\n    CHOOSE_LOCATION = 'CHOOSE_LOCATION',\r\n    CREATE_FOLDER = 'CREATE_FOLDER',\r\n    CREATE_FILE = 'CREATE_FILE',\r\n    UPLOAD_FILE = 'UPLOAD_FILE',\r\n    RENAME = 'RENAME',\r\n    MOVE = 'MOVE',\r\n    COPY = 'COPY',\r\n    CONTENT = 'CONTENT',\r\n    MEDIA = 'MEDIA',\r\n    EDIT = 'EDIT',\r\n    CONTEXT_MENU = 'CONTEXT_MENU',\r\n};","let host: string | null = null;\r\n\r\nexport default {\r\n    getHost() {\r\n        return host;\r\n    },\r\n    setHost(newHost: string) {\r\n        host = newHost;\r\n        while (host.endsWith('/'))\r\n            host = host.slice(0, -1);\r\n    }\r\n};\r\n","import { Action, SET_LOGGED_IN, SET_LOGGED_OUT, SET_HOST, SET_WEB_ID, RESET_HOST, RESET_WEB_ID } from \"../Actions/actionTypes\";\r\nimport config from \"../config\";\r\n\r\ninterface AccountState {\r\n    loggedIn: boolean;\r\n    host: string | null;\r\n    webId: string | null;\r\n}\r\n\r\nconst initialState: AccountState = {\r\n    loggedIn: false,\r\n    host: null,\r\n    webId: null\r\n};\r\n\r\nexport const account = (state = initialState, action: Action<string|null|void>): AccountState => {\r\n    switch(action.type) {\r\n        case SET_LOGGED_IN:\r\n            return { ...state, loggedIn: true };\r\n        case SET_LOGGED_OUT:\r\n            return { ...state, loggedIn: false };\r\n        case SET_HOST:\r\n            config.setHost(action.value as string); // TODO\r\n            return { ...state, host: action.value as string };\r\n        case RESET_HOST:\r\n            return { ...state, host: null };\r\n        case SET_WEB_ID:\r\n            return { ...state, webId: action.value as string|null };\r\n        case RESET_WEB_ID:\r\n            return { ...state, webId: null };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { DIALOGS, Action, OPEN_DIALOG, CLOSE_DIALOG, OPEN_CONTEXT_MENU, CLOSE_CONTEXT_MENU } from \"../Actions/actionTypes\";\r\n\r\n// Initialize state with values of DIALOGS as keys and false (closed) as value\r\nconst initialVisibleDialogs: Record<DIALOGS, boolean> = Object.values(DIALOGS)\r\n    .map((name: DIALOGS) => ({ [name]: false } as Record<DIALOGS, boolean>))\r\n    .reduce((prev, cur) => ({ ...prev, ...cur })) as Record<DIALOGS, boolean>;\r\n\r\nexport const visibleDialogs = (state = initialVisibleDialogs, action: Action<DIALOGS>): typeof initialVisibleDialogs => {\r\n    switch (action.type) {\r\n        case OPEN_DIALOG:\r\n            return { ...state, [action.value]: true };\r\n        case CLOSE_DIALOG:\r\n            return { ...state, [action.value]: false };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst initialContextMenuState = {\r\n    open: false,\r\n    x: 0,\r\n    y: 0,\r\n};\r\n\r\nexport const contextMenu = (state = initialContextMenuState, action: Action<any>): typeof initialContextMenuState => {\r\n    switch (action.type) {\r\n        case OPEN_CONTEXT_MENU:\r\n            return {\r\n                ...state,\r\n                open: true,\r\n                x: action.value.x,\r\n                y: action.value.y\r\n            };\r\n        case CLOSE_CONTEXT_MENU:\r\n            return { ...state, open: false };\r\n        default:\r\n            return state;\r\n    }\r\n};","import { Item } from \"../Api/Item\";\r\nimport { Action, SET_ITEMS, SELECT_ITEMS, DESELECT_ITEM, FILTER_ITEMS, RESET_FILTER, TOGGLE_SELECTED_ITEM } from \"../Actions/actionTypes\";\r\n\r\ninterface ItemsState {\r\n    inCurFolder: Item[];\r\n    filter: string;\r\n    selected: Item[];\r\n}\r\n\r\nconst initialItemsState: ItemsState = {\r\n    inCurFolder: [],\r\n    filter: '',\r\n    selected: [],\r\n};\r\n\r\nexport const items = (state = initialItemsState, action: Action<any>): ItemsState => {\r\n    switch(action.type) {\r\n        case SET_ITEMS:\r\n            return { ...state, inCurFolder: action.value as Item[] };\r\n        case SELECT_ITEMS:\r\n            return { ...state, selected: action.value as Item[] };\r\n        case DESELECT_ITEM:\r\n            return { ...state, selected: removeItem(state.selected, action.value as Item) };\r\n        case TOGGLE_SELECTED_ITEM:\r\n            return { \r\n                ...state,\r\n                selected: state.selected.includes(action.value) ?\r\n                    removeItem(state.selected, action.value as Item)\r\n                    : addItem(state.selected, action.value as Item)\r\n            };\r\n        case FILTER_ITEMS:\r\n            return { ...state, filter: action.value as string };\r\n        case RESET_FILTER:\r\n            return { ...state, filter: '' };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst removeItem = (items: Item[], item: Item) => {\r\n    return items.filter(selectedItem => !selectedItem.equals(item));\r\n}\r\n\r\nconst addItem = (items: Item[], item: Item) => {\r\n    return [...items, item];\r\n}","import { Action, ENTER_FOLDER, SET_PATH, MOVE_FOLDER_UPWARDS } from \"../Actions/actionTypes\";\r\n\r\n\r\nconst initialPath: string[] = [];\r\n\r\nexport const path = (state = initialPath, action: Action<any>): typeof initialPath => {\r\n    switch(action.type) {\r\n        case ENTER_FOLDER:\r\n            return [...state, action.value];\r\n        case MOVE_FOLDER_UPWARDS:\r\n            return action.value > 0 ?\r\n                state.slice(0, -action.value)\r\n                : state;\r\n        case SET_PATH:\r\n            return [...action.value];\r\n        default:\r\n            return state;\r\n    }\r\n};","import { Action, SET_UPLOAD_FILE_LIST, SET_UPLOAD_FILE_PROGRESS } from \"../Actions/actionTypes\";\r\n\r\nconst initialUploadState = {\r\n    fileList: null as FileList|null,\r\n    progress: 0,\r\n};\r\n\r\nexport const upload = (state = initialUploadState, action: Action<FileList|number>): typeof initialUploadState => {\r\n    switch(action.type) {\r\n        case SET_UPLOAD_FILE_LIST:\r\n            return { ...state, fileList: action.value as FileList };\r\n        case SET_UPLOAD_FILE_PROGRESS:\r\n            return { ...state, progress: action.value as number };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { account } from './accountReducer';\r\nimport { blob } from './currentBlobReducer';\r\nimport { visibleDialogs, contextMenu } from './dialogsReducer';\r\nimport { errorMessage } from './errorReducer';\r\nimport { items } from './itemsReducer';\r\nimport { loading } from './loadingReducer';\r\nimport { path } from './pathReducer';\r\nimport { upload } from './uploadReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    account,\r\n    blob,\r\n    contextMenu,\r\n    visibleDialogs,\r\n    errorMessage,\r\n    items,\r\n    loading,\r\n    path,\r\n    upload,\r\n});\r\n\r\nexport default rootReducer;\r\nexport type AppState = ReturnType<typeof rootReducer>;","import { Action, SET_LOADED_BLOB, RESET_LOADED_BLOB } from \"../Actions/actionTypes\";\r\n\r\nexport const blob = (state: string|null = null, action: Action<Blob>): typeof state => {\r\n    switch(action.type) {\r\n        case SET_LOADED_BLOB:\r\n            return URL.createObjectURL(action.value);\r\n        case RESET_LOADED_BLOB:\r\n            if (state !== null)\r\n                URL.revokeObjectURL(state);\r\n            return null;\r\n        default:\r\n            return state;\r\n    }\r\n};","import { Action, SET_ERROR_MESSAGE } from \"../Actions/actionTypes\";\r\n\r\nexport const errorMessage = (state = '', action: Action<string>): typeof state => {\r\n    switch(action.type) {\r\n        case SET_ERROR_MESSAGE:\r\n            return action.value;\r\n        default:\r\n            return state;\r\n    }\r\n};","import { Action, DISPLAY_LOADING, STOP_LOADING } from \"../Actions/actionTypes\";\r\n\r\nconst initialLoadingState: boolean = false;\r\n\r\nexport const loading = (state = initialLoadingState, action: Action<void>): boolean => {\r\n    switch(action.type) {\r\n        case DISPLAY_LOADING:\r\n            return true;\r\n        case STOP_LOADING:\r\n            return false;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config: ServiceWorkerConfig) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config: ServiceWorkerConfig) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config: ServiceWorkerConfig) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n\r\n\r\nexport interface ServiceWorkerConfig {\r\n  onUpdate(registration: ServiceWorkerRegistration): void;\r\n  onSuccess(registration: ServiceWorkerRegistration): void;\r\n}","/**\r\n * Class for an arbitrary item from a solid pod\r\n */\r\nexport class Item {\r\n    _name: string;\r\n    _path: string[];\r\n    _url: string;\r\n    _size?: string\r\n\r\n    constructor(url: string, size?: string) {\r\n        const path = getPathFromUrl(url);\r\n\r\n        this._name = path.pop() || '';\r\n        this._path = path;\r\n        this._url = url;\r\n        this._size = size;\r\n    }\r\n\r\n    // Make properties readonly\r\n    get name() { return this._name; }\r\n    get path() { return this._path; }\r\n    get url() { return this._url; }\r\n    get size() { return this._size; }\r\n\r\n    equals(item: Item) {\r\n        return this.name === item.name\r\n            && this.path.length === item.path.length\r\n            && this.path.every((val, index) => val === item.path[index]);\r\n    }\r\n\r\n    getDisplayName() {\r\n        return decodeURI(this.name);\r\n    }\r\n\r\n    getDisplaySize() {\r\n        return this._size ? getHumanFileSize(this._size) : 'Unknown size';\r\n    }\r\n}\r\n\r\nexport class FileItem extends Item {\r\n    isImage() {\r\n        return patterns.image.test(this.name);\r\n    }\r\n\r\n    isMedia() {\r\n        return patterns.media.test(this.name);\r\n    }\r\n\r\n    isEditable() {\r\n        return patterns.editable.test(this.name);\r\n    }\r\n\r\n    isExtractable() {\r\n        return patterns.extractable.test(this.name);\r\n    }\r\n\r\n    isVideo() {\r\n        return patterns.video.test(this.name);\r\n    }\r\n}\r\n\r\nexport class FolderItem extends Item { }\r\n\r\n\r\n// regex patterns for testing if a file is of a specific type\r\nconst patterns = {\r\n    editable: /\\.(txt|diff?|patch|svg|asc|cnf|cfg|conf|html?|cfm|cgi|aspx?|ini|pl|py|md|css|cs|jsx?|jsp|log|htaccess|htpasswd|gitignore|gitattributes|env|json|atom|eml|rss|markdown|sql|xml|xslt?|sh|rb|as|bat|cmd|cob|for|ftn|frm|frx|inc|lisp|scm|coffee|php[3-6]?|java|c|cbl|go|h|scala|vb|tmpl|lock|go|yml|yaml|tsv|lst|ttl)$/i,\r\n    image: /\\.(jpe?g|gif|bmp|png|svg|tiff?)$/i,\r\n    media: /\\.(mp3|ogg|wav|mp4|webm)$/i,\r\n    video: /\\.(mp4|webm|ogg)$/i,\r\n    extractable: /\\.(zip)$/i\r\n};\r\n\r\n/**\r\n * Calculate file size by bytes in human readable format\r\n */\r\nexport const getHumanFileSize = (byteString: string|number): string => {\r\n    const bytes = typeof byteString === 'string' ?\r\n        parseInt(byteString)\r\n        : byteString;\r\n    const e = (Math.log(bytes) / Math.log(1e3)) | 0;\r\n    return +(bytes / Math.pow(1e3, e)).toFixed(2) + ' ' + ('kMGTPEZY'[e - 1] || '') + 'B';\r\n};\r\n\r\n\r\n/**\r\n * Get path including the last element (e.g. [public, test, index.html])\r\n */\r\nconst getPathFromUrl = (urlString: string): string[] => {\r\n    const url = new URL(urlString);\r\n    return url.pathname.split('/').filter(val => val !== '');\r\n}","// Based on https://github.com/jeff-zucker/solid-file-client/blob/master/src/folderUtils\r\nimport * as rdflib from 'rdflib';\r\nimport { FileItem, FolderItem } from './Item';\r\nimport { FolderItems } from './types';\r\n\r\nexport function getSizeByGraph(graph: rdflib.IndexedFormula, subjectName: string): string | undefined {\r\n    const subjectNode = rdflib.sym(subjectName);\r\n    const nsSize = rdflib.sym('http://www.w3.org/ns/posix/stat#size');\r\n    const size = graph.any(subjectNode, nsSize, undefined, undefined);\r\n\r\n    return (size && 'value' in size) ? size.value : undefined;\r\n}\r\n\r\n/**\r\n * @param {rdflib.IndexedFormula} graph a rdflib.graph() database instance\r\n * @param {string} baseUrl location of the folder\r\n * @returns {boolean}\r\n */\r\nexport function isFolder(graph: rdflib.IndexedFormula, baseUrl: string): boolean {\r\n    const folderNode = rdflib.sym(baseUrl);\r\n    const isAnInstanceOfClass = rdflib.sym('http://www.w3.org/1999/02/22-rdf-syntax-ns#type');\r\n    const types = graph.each(folderNode, isAnInstanceOfClass, undefined, undefined);\r\n    return Object.values(types)\r\n        .some(({ value }) => value.match('ldp#BasicContainer') !== null);\r\n}\r\n\r\nexport function getFolderItems(graph: rdflib.IndexedFormula, subj: string): FolderItems {\r\n    const files: FileItem[] = [];\r\n    const folders: FolderItem[] = [];\r\n\r\n    graph.each(\r\n        rdflib.sym(subj),\r\n        rdflib.sym('http://www.w3.org/ns/ldp#contains'),\r\n        undefined,\r\n        undefined\r\n    ).forEach(item => {\r\n        const url = item.value;\r\n        const size = getSizeByGraph(graph, url);\r\n\r\n        if (isFolder(graph, url))\r\n            folders.push(new FolderItem(url, size));\r\n        else\r\n            files.push(new FileItem(url, size));\r\n    });\r\n\r\n    return { files, folders };\r\n}\r\n\r\n/**\r\n * @param {string} text RDF text that can be passed to $rdf.parse()\r\n * @param {string} baseUrl the base url of the item\r\n * @param {string} contentType Content-Type of the request\r\n * @returns {Promise<rdflib.IndexedFormula>} a rdfilb.graph() database instance with parsed RDF\r\n */\r\nexport async function text2graph(text: string, baseUrl: string, contentType: string = ''): Promise<rdflib.IndexedFormula> {\r\n    contentType = contentType || guessFileType(baseUrl);\r\n    const graph = rdflib.graph();\r\n\r\n    return new Promise((resolve, reject) => {\r\n        rdflib.parse(text, graph, baseUrl, contentType, () => {});\r\n        resolve(graph);\r\n    });\r\n}\r\n\r\nfunction guessFileType(url: string): string {\r\n    const ext = url.replace(/.*\\./, '');\r\n    if (ext.match(/\\/$/)) return 'dir';\r\n    if (ext.match(/(md|markdown)/)) return 'text/markdown';\r\n    if (ext.match(/html/)) return 'text/html';\r\n    if (ext.match(/xml/)) return 'text/xml';\r\n    if (ext.match(/ttl/)) return 'text/turtle';\r\n    if (ext.match(/n3/)) return 'text/n3';\r\n    if (ext.match(/rq/)) return 'application/sparql';\r\n    if (ext.match(/css/)) return 'text/css';\r\n    if (ext.match(/txt/)) return 'text/plain';\r\n    if (ext.match(/json/)) return 'application/json';\r\n    if (ext.match(/js/)) return 'application/javascript';\r\n    if (ext.match(/(png|gif|jpeg|tif)/)) return 'image';\r\n    if (ext.match(/(mp3|aif|ogg)/)) return 'audio';\r\n    if (ext.match(/(avi|mp4|mpeg)/)) return 'video';\r\n    /* default */ return 'text/turtle';\r\n}\r\n","import config from './../config';\r\nimport * as folderUtils from './folderUtils';\r\nimport * as solidAuth from 'solid-auth-client';\r\nimport { FolderItems } from './types';\r\n\r\n\r\n/**\r\n * Fetch API to get item\r\n */\r\nexport async function fetchFile(path: string, fileName?: string): Promise<Response>  {\r\n    const url = buildFileUrl(path, fileName);\r\n    return solidAuth.fetch(url)\r\n        .then(assertSuccessfulResponse);\r\n};\r\n\r\n\r\n/**\r\n * Fetch API to get folder\r\n */\r\nexport async function fetchFolder(path: string, folderName?: string): Promise<Response> {\r\n    const url = buildFolderUrl(path, folderName);\r\n    return solidAuth.fetch(url, { headers: { \"Accept\": \"text/turtle\" } })\r\n        .then(assertSuccessfulResponse);\r\n};\r\n\r\n\r\n/**\r\n * Fetch API to retrieve object containing a files and folders array\r\n */\r\nexport async function readFolder(path: string, folderName?: string): Promise<FolderItems> {\r\n    const url = buildFolderUrl(path, folderName);\r\n\r\n    const response = await fetchFolder(path, folderName);\r\n    const folderRDF = await response.text();\r\n    const graph = await folderUtils.text2graph(folderRDF, url, 'text/turtle');\r\n    const folderItems = folderUtils.getFolderItems(graph, url);\r\n\r\n    return folderItems;\r\n}\r\n\r\n\r\n/**\r\n * Fetch API to move items\r\n */\r\nexport async function moveItems(path: string, destination: string, itemNames: string[]): Promise<Response> {\r\n    await copyItems(path, destination, itemNames);\r\n    return removeItems(path, itemNames);\r\n};\r\n\r\n\r\n/**\r\n * Fetch API to rename a file\r\n */\r\nexport async function renameFile(path: string, oldName: string, newName: string): Promise<Response> {\r\n    await copyFile(path, oldName, path, newName);\r\n    return removeItem(path, oldName);\r\n};\r\n\r\n\r\n/**\r\n * Fetch API to rename a folder\r\n */\r\nexport async function renameFolder(path: string, oldFolderName: string, newFolderName: string): Promise<Response> {\r\n    await copyFolder(path, oldFolderName, path, newFolderName);\r\n    return removeFolderRecursively(path, oldFolderName);\r\n};\r\n\r\n\r\n/**\r\n * Fetch API to copy files\r\n */\r\nexport async function copyItems(path: string, destination: string, itemNames: string[]): Promise<Response> {\r\n    let { files, folders } = await readFolder(path);\r\n\r\n    files = files.filter(({ name }) => itemNames.includes(name));\r\n    folders = folders.filter(({ name }) => itemNames.includes(name));\r\n\r\n    const promises = [\r\n        ...files.map(({ name }) => copyFile(path, name, destination, name)),\r\n        ...folders.map(({ name }) => copyFolder(path, name, destination, name))\r\n    ];\r\n\r\n    await Promise.all(promises);\r\n    return new Response();\r\n};\r\n\r\n\r\n/**\r\n * Fetch API to copy a file\r\n */\r\nexport async function copyFile(originPath: string, originName: string, destinationPath: string, destinationName: string): Promise<Response> {\r\n    const fileResponse = await fetchFile(originPath, originName);\r\n    const content = await fileResponse.blob();\r\n\r\n    return createFile(destinationPath, destinationName, content);\r\n}\r\n\r\n\r\n/**\r\n * Fetch API to copy a folder recursively\r\n */\r\nexport async function copyFolder(originPath: string, originName: string, destinationPath: string, destinationName: string): Promise<Response> {\r\n    // TODO: Combine these two promises for better performance\r\n    await createFolder(destinationPath, destinationName);\r\n    const { files, folders } = await readFolder(originPath, originName);\r\n\r\n    const promises = [\r\n        ...files.map(({ name }) => copyFile(`${originPath}/${originName}`, name, `${destinationPath}/${destinationName}`, name)),\r\n        ...folders.map(({ name }) => copyFolder(`${originPath}/${originName}`, name, `${destinationPath}/${destinationName}`, name))\r\n    ];\r\n\r\n    await Promise.all(promises);\r\n    return new Response();\r\n}\r\n\r\n\r\n/**\r\n * Fetch API to upload files\r\n */\r\nexport async function upload(path: string, fileList: FileList): Promise<Response> {\r\n    const promises = Array.from(fileList).map(file => updateFile(path, file.name, file));\r\n    await Promise.all(promises);\r\n    return new Response();\r\n};\r\n\r\n\r\n/**\r\n * Fetch API to create a folder\r\n */\r\nexport async function createFolder(path: string, folderName: string): Promise<Response> {\r\n    if (await folderExists(path, folderName))\r\n        return new Response();\r\n\r\n    return createItem(path, folderName, new Blob(), '<http://www.w3.org/ns/ldp#BasicContainer>; rel=\"type\"');\r\n}\r\n\r\n\r\n/**\r\n * Fetch API to replace or create a new file\r\n */\r\nexport async function updateFile(path: string, fileName: string, content: Blob|string): Promise<Response> {\r\n    await removeItem(path, fileName);\r\n    return createFile(path, fileName, content);\r\n}\r\n\r\n\r\n/**\r\n * Fetch API to create a new file\r\n */\r\nexport async function createFile(path: string, fileName: string, content: Blob|string): Promise<Response> {\r\n    return createItem(path, fileName, content, '<http://www.w3.org/ns/ldp#Resource>; rel=\"type\"');\r\n}\r\n\r\n\r\n/**\r\n * Fetch API to create create an item\r\n */\r\nasync function createItem(path: string, itemName: string, content: Blob|string, link: string): Promise<Response> {\r\n    const baseUrl = `${config.getHost()}${path}`;\r\n    const request = {\r\n        method: 'POST',\r\n        headers: {\r\n            link,\r\n            slug: itemName,\r\n            'Content-Type': <any>undefined // TODO: This hack can be removed if this issue is fixed: https://github.com/solid/node-solid-server/issues/1165\r\n        },\r\n        body: content\r\n    };\r\n\r\n    return solidAuth.fetch(baseUrl, request)\r\n        .then(assertSuccessfulResponse);\r\n}\r\n\r\n\r\n/**\r\n * Fetch API to remove multiple items\r\n */\r\nexport async function removeItems(path: string, itemNames: string[]): Promise<Response> {\r\n    return Promise.all(itemNames.map(itemName => removeItem(path, itemName)))\r\n        .then(() => new Response());\r\n};\r\n\r\n\r\n/**\r\n * Fetch API to remove one item\r\n */\r\nexport async function removeItem(path: string, itemName: string): Promise<Response> {\r\n    const url = buildFileUrl(path, itemName);\r\n\r\n    const response = await solidAuth.fetch(url, { method: 'DELETE' });\r\n    if (response.status === 409 || response.status === 301) {\r\n        // Solid pod returns 409 if the item is a folder and is not empty\r\n        // Solid pod returns 301 if is attempted to read a folder url without '/' at the end (from buildFileUrl)\r\n        return removeFolderRecursively(path, itemName);\r\n    }\r\n    else if (response.status === 404) {\r\n        // Don't throw if the item didn't exist\r\n        return response;\r\n    }\r\n    else {\r\n        assertSuccessfulResponse(response);\r\n        return response;\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * Fetch API to remove contents and folder itself recursively\r\n */\r\nexport async function removeFolderRecursively(path: string, folderName: string): Promise<Response> {\r\n    await removeFolderContents(path, folderName);\r\n    return removeItem(path, folderName);\r\n}\r\n\r\n\r\n/**\r\n * Fetch API to remove contents of one folder recursively\r\n */\r\nexport async function removeFolderContents(path: string, folderName: string): Promise<Response> {\r\n    const folderPath = `${path}/${folderName}`;\r\n\r\n    const { files, folders } = await readFolder(path, folderName);\r\n    const promises = [\r\n        ...files.map(({ name }) => removeItem(folderPath, name)),\r\n        ...folders.map(({ name }) => removeFolderRecursively(folderPath, name))\r\n    ];\r\n    await Promise.all(promises);\r\n    return new Response();\r\n}\r\n\r\n\r\n/**\r\n * Fetch API to check if a folder exists\r\n */\r\nexport async function folderExists(path: string, folderName: string): Promise<boolean> {\r\n    try {\r\n        await fetchFolder(path, folderName);\r\n        return true;\r\n    }\r\n    catch (error) {\r\n        if (error instanceof Response && error.status === 404)\r\n            return false;\r\n\r\n        throw error;\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * Build up an url from a path relative to the storage location and a folder name\r\n */\r\nfunction buildFolderUrl(path: string, folderName?: string): string {\r\n    return buildFileUrl(path, folderName) + '/';\r\n}\r\n\r\n\r\n/**\r\n * Build up an url from a path relative to the storage location and a fileName\r\n */\r\nfunction buildFileUrl(path: string, fileName?: string): string {\r\n    let url = `${config.getHost()}${path}/${fileName || ''}`;\r\n    while (url.slice(-1) === '/')\r\n        url = url.slice(0, -1);\r\n\r\n    return url;\r\n}\r\n\r\n\r\n/**\r\n * Throw response if fetch response was unsuccessful\r\n * @param {Response} response\r\n * @returns {Response}\r\n */\r\nfunction assertSuccessfulResponse(response: Response): Response {\r\n    if (!response.ok)\r\n        throw response;\r\n    return response;\r\n}\r\n","import * as API from './Api';\r\nimport JSZip from 'jszip';\r\nimport { FileItem, FolderItem, Item } from './Item';\r\nimport ApiCache from './ApiCache';\r\n\r\nconst cache = new ApiCache();\r\n\r\n/**\r\n * Log a fetch response error and throw it again\r\n * @param {*} error \r\n */\r\nconst handleFetchError = async (error: Error | Response | string) => {\r\n    let detailedErrorMessage = '';\r\n    let displayErrorMessage: string | undefined;\r\n\r\n    console.group('handleFetchError');\r\n    if (error instanceof Response) {\r\n        detailedErrorMessage = await error.text();\r\n\r\n        console.error(`url: ${error.url}`);\r\n        console.error(`status: ${error.status}`);\r\n\r\n        const displayMessages: Record<string, string> = {\r\n            '401': `The ressource at ${error.url} requires you to login.`,\r\n            '403': `You don't have permission to access the ressource at ${error.url}.\r\n            Please make sure that you are logged in with the correct account.\r\n            If the server runs with version 5.0.0 or higher, make sure you gave this app read/write permission`,\r\n            '404': `The ressource at ${error.url} was not found`,\r\n            '500': `An internal server error occured...\r\n            ${detailedErrorMessage}`,\r\n        };\r\n        if (error.status in displayMessages)\r\n            displayErrorMessage = displayMessages[error.status];\r\n    }\r\n    else if (error instanceof Error) {\r\n        detailedErrorMessage = error.message;\r\n        console.error(error.stack);\r\n    }\r\n    else if (typeof error === 'string') {\r\n        detailedErrorMessage = error;\r\n    }\r\n    else {\r\n        detailedErrorMessage = JSON.stringify(error);\r\n    }\r\n    console.error(`errorMessage: ${detailedErrorMessage}`);\r\n    console.error(`error: ${error}`);\r\n    console.groupEnd();\r\n\r\n    throw new Error((displayErrorMessage) ? displayErrorMessage : detailedErrorMessage);\r\n}\r\n\r\n/**\r\n * Clean path string removing double slashes and prepending a slash if non-empty\r\n */\r\nconst fixPath = (path: string): string => {\r\n    if (path === \"\")\r\n        return path;\r\n    return ('/' + path).replace(/\\/\\//g, '/');\r\n};\r\n\r\n/**\r\n * Wrap API response for retrieving item list\r\n * itemList is cached automatically\r\n * @param {String} path\r\n * @returns {Promise<API.FolderItems>}\r\n */\r\nexport const getItemList = (path: string): Promise<Item[]> => {\r\n    path = fixPath(path);\r\n    if (cache.contains(path))\r\n        return Promise.resolve(cache.get(path));\r\n    return API.readFolder(path)\r\n        .then(({ files, folders }) => [...files, ...folders])\r\n        .then(itemList => cache.add(path, itemList))\r\n        .catch(handleFetchError);\r\n};\r\n\r\nexport const clearCacheForFolder = (path: string) => cache.remove(fixPath(path));\r\nexport const clearCache = () => cache.clear();\r\n\r\n/**\r\n * Wrap API response for retrieving file content\r\n */\r\nexport const getFileBlob = (path: string, filename: string): Promise<Blob> => {\r\n    path = fixPath(path);\r\n    return API.fetchFile(path, filename)\r\n        .then(response => response.blob())\r\n        .catch(handleFetchError);\r\n};\r\n\r\n\r\n/**\r\n * Wrap API response for renaming a file\r\n */\r\nexport const renameFile = (path: string, fileName: string, newFileName: string): Promise<Response> => {\r\n    path = fixPath(path);\r\n    cache.remove(path);\r\n    return API.renameFile(path, fileName, newFileName)\r\n        .catch(handleFetchError)\r\n};\r\n\r\n\r\n/**\r\n * Wrap API response for renaming a folder\r\n */\r\nexport const renameFolder = (path: string, folderName: string, newFolderName: string): Promise<Response> => {\r\n    path = fixPath(path);\r\n    cache.remove(path);\r\n    return API.renameFolder(path, folderName, newFolderName)\r\n        .catch(handleFetchError)\r\n};\r\n\r\n/**\r\n * Wrap API response for creating a folder\r\n */\r\nexport const createFolder = (path: string, folderName: string): Promise<Response> => {\r\n    path = fixPath(path);\r\n    cache.remove(path);\r\n    if (!(folderName || '').trim()) {\r\n        return Promise.reject('Invalid folder name');\r\n    }\r\n    return API.createFolder(path, folderName)\r\n        .catch(handleFetchError)\r\n};\r\n\r\n/**\r\n * Wrap API response for removing a file or folder\r\n */\r\nexport const removeItems = (path: string, filenames: string[]): Promise<Response> => {\r\n    path = fixPath(path);\r\n    cache.remove(path);\r\n    if (!filenames.length) {\r\n        return Promise.reject('No files to remove');\r\n    }\r\n    return API.removeItems(path, filenames)\r\n        .catch(handleFetchError)\r\n};\r\n\r\n/**\r\n * Wrap API response for moving a file or folder\r\n */\r\nexport const moveItems = (path: string, destination: string, filenames: string[]): Promise<Response> => {\r\n    path = fixPath(path);\r\n    destination = fixPath(destination);\r\n    cache.remove(path, destination);\r\n    if (!filenames.length) {\r\n        return Promise.reject('No files to move');\r\n    }\r\n    return API.moveItems(path, destination, filenames)\r\n        .catch(handleFetchError)\r\n};\r\n\r\n/**\r\n * Wrap API response for copying a file or folder\r\n */\r\nexport const copyItems = (path: string, destination: string, filenames: string[]): Promise<Response> => {\r\n    path = fixPath(path);\r\n    destination = fixPath(destination);\r\n    cache.remove(path, destination);\r\n    if (!filenames.length) {\r\n        return Promise.reject('No files to copy');\r\n    }\r\n    return API.copyItems(path, destination, filenames)\r\n        .catch(handleFetchError)\r\n};\r\n\r\n/**\r\n * Wrap API response for uploading files\r\n */\r\nexport const uploadFiles = (path: string, fileList: FileList): Promise<Response> => {\r\n    path = fixPath(path);\r\n    cache.remove(path);\r\n\r\n    if (!fileList.length) {\r\n        return Promise.reject('No files to upload');\r\n    }\r\n    return API.upload(path, fileList)\r\n        .catch(handleFetchError)\r\n};\r\n\r\n/**\r\n * Wrap API response for uploading a file\r\n */\r\nexport const updateFile = (path: string, fileName: string, content: Blob|string): Promise<Response> => {\r\n    path = fixPath(path);\r\n    cache.remove(path);\r\n    return API.updateFile(path, fileName, content)\r\n        .catch(handleFetchError);\r\n};\r\n\r\n/**\r\n * Wrap API response for zipping multiple items\r\n */\r\nexport const getAsZip = (path: string, itemList: Item[]): Promise<JSZip> => {\r\n    path = fixPath(path);\r\n    const zip = new JSZip();\r\n\r\n    return addItemsToZip(zip, path, itemList)\r\n        .then(() => zip);\r\n}\r\n\r\n/**\r\n * Add items to a zip object recursively\r\n */\r\nconst addItemsToZip = (zip: JSZip, path: string, itemList: Item[]): Promise<void[]> => {\r\n    const promises = itemList.map(async item => {\r\n        if (item instanceof FolderItem) {\r\n            const zipFolder = zip.folder(item.name);\r\n            const folderPath = `${path}/${item.name}`;\r\n            const folderItems = await getItemList(folderPath);\r\n            await addItemsToZip(zipFolder, folderPath, folderItems);\r\n        }\r\n        else if (item instanceof FileItem) {\r\n            const blob = await getFileBlob(path, item.name);\r\n            zip.file(item.name, blob, { binary: true });\r\n        }\r\n    });\r\n\r\n    return Promise.all(promises);\r\n}\r\n\r\n/**\r\n * Wrap API response for extracting a zip archive\r\n */\r\nexport const extractZipArchive = async (path: string, destination: string = path, fileName: string) => {\r\n    const blob = await getFileBlob(path, fileName);\r\n    const zip = await JSZip.loadAsync(blob);\r\n\r\n    return uploadExtractedZipArchive(zip, destination);\r\n};\r\n\r\n/**\r\n * Recursively upload all files and folders from an extracted zip archive\r\n */\r\nasync function uploadExtractedZipArchive(zip: JSZip, destination: string, curFolder = ''): Promise<void[]> {\r\n    const promises = getItemsInZipFolder(zip, curFolder)\r\n        .map(async item => {\r\n            const relativePath = item.name;\r\n            const itemName = getItemNameFromPath(relativePath);\r\n            const path = getParentPathFromPath(`${destination}/${relativePath}`);\r\n\r\n            if (item.dir) {\r\n                await createFolder(path, itemName);\r\n                await uploadExtractedZipArchive(zip, destination, relativePath);\r\n            }\r\n            else {\r\n                const blob = await item.async('blob');\r\n                await updateFile(path, itemName, blob);\r\n            }\r\n        });\r\n\r\n    return Promise.all(promises);\r\n};\r\n\r\nfunction getItemsInZipFolder(zip: JSZip, folderPath: string): JSZip.JSZipObject[] {\r\n    return Object.keys(zip.files)\r\n        .filter(fileName => {\r\n            // Only items in the current folder and subfolders\r\n            const relativePath = fileName.slice(folderPath.length, fileName.length);\r\n            if (!relativePath || fileName.slice(0, folderPath.length) !== folderPath)\r\n                return false;\r\n            \r\n            // No items from subfolders\r\n            if (relativePath.includes('/') && relativePath.slice(0, -1).includes('/'))\r\n                return false;\r\n\r\n            return true;\r\n        })\r\n        .map(key => zip.files[key]);\r\n};\r\n\r\nfunction getItemNameFromPath(path: string): string {\r\n    path = path.endsWith('/') ? path.slice(0, -1) : path;\r\n    return path.substr(path.lastIndexOf('/') + 1);\r\n}\r\n\r\nfunction getParentPathFromPath(path: string): string {\r\n    path = path.endsWith('/') ? path.slice(0, -1) : path;\r\n    path = path.substr(0, path.lastIndexOf('/'));\r\n    return path;\r\n}\r\n","// eslint-disable-next-line no-unused-vars\r\nimport { Item } from './Item';\r\n\r\nexport default class ApiCache {\r\n    _data: Record<string, Item[]> = {};\r\n\r\n    /**\r\n     * Add data to the cache\r\n     */\r\n    add(path: string, itemList: Item[]): Item[] {\r\n        this._data[path] = itemList;\r\n        return itemList;\r\n    }\r\n\r\n    /**\r\n     * Return true if the url is already cached\r\n     */\r\n    contains(path: string): boolean {\r\n        return this._data.hasOwnProperty(path);\r\n    }\r\n\r\n    /**\r\n     * Get the cached data\r\n     */\r\n    get(path: string): Item[] {\r\n        return this._data[path];\r\n    }\r\n\r\n    /**\r\n     * Remove paths from the cache\r\n     */\r\n    remove(...paths: string[]) {\r\n        paths.filter(path => this.contains(path))\r\n            .forEach(path => delete this._data[path]);\r\n    }\r\n\r\n    /**\r\n     * Clear the whole cache\r\n     */\r\n    clear() {\r\n        this._data = {};\r\n    }\r\n}\r\n","import * as APIHandler from '../Api/ApiHandler';\r\nimport * as solidAuth from 'solid-auth-client';\r\nimport { createBrowserHistory, History } from 'history';\r\nimport { Item, FileItem, FolderItem } from '../Api/Item';\r\nimport { Action, ENTER_FOLDER, SET_LOGGED_IN, SET_LOGGED_OUT, SET_HOST, SET_ITEMS, SET_WEB_ID, SELECT_ITEMS, TOGGLE_SELECTED_ITEM, DESELECT_ITEM, FILTER_ITEMS, RESET_FILTER, DISPLAY_LOADING, STOP_LOADING, DIALOGS, OPEN_DIALOG, CLOSE_DIALOG, SET_LOADED_BLOB, SET_UPLOAD_FILE_LIST, SET_UPLOAD_FILE_PROGRESS, SET_PATH, MOVE_FOLDER_UPWARDS, RESET_LOADED_BLOB, RESET_HOST, RESET_WEB_ID, SET_ERROR_MESSAGE, OPEN_CONTEXT_MENU, CLOSE_CONTEXT_MENU } from './actionTypes';\r\nimport { AppState } from '../Reducers/reducer';\r\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\r\n\r\nexport type MyThunk = ThunkAction<void, AppState, null, Action<any>>;\r\nexport type MyDispatch = ThunkDispatch<AppState, null, Action<any>>;\r\n\r\nexport const initApp = (): MyThunk => (dispatch, getState) => {\r\n    dispatch(updateLoginStatus());\r\n    dispatch(openDialog(DIALOGS.CHOOSE_LOCATION));\r\n};\r\n\r\n\r\nexport const solidLogin = (): MyThunk => (dispatch, getState) => {\r\n    dispatch(displayLoading());\r\n\r\n    solidPopupLogin()\r\n        .then(session => dispatch(updateLoginStatus(session)))\r\n        .catch(r => dispatch(setErrorMessage(String(r))))\r\n        .finally(() => dispatch(stopLoading()));\r\n};\r\n\r\nexport const updateLoginStatus = (session?: Session|null): MyThunk => async (dispatch, getState) => {\r\n    session = session || await solidAuth.currentSession();\r\n    if (!session) {\r\n        dispatch(setLoggedOut());\r\n        dispatch(resetWebId());\r\n    }\r\n    else {\r\n        dispatch(setWebId(session.webId));\r\n        dispatch(setLoggedIn());\r\n    }\r\n}\r\n\r\nasync function solidPopupLogin() {\r\n    return solidAuth.popupLogin({ popupUri: './vendor/solid-auth-client/popup.html' });\r\n}\r\n\r\n\r\nexport const solidLogout = (): MyThunk => (dispatch, getState) => {\r\n    dispatch(displayLoading());\r\n\r\n    solidAuth.logout()\r\n        .then(() => {\r\n            dispatch(resetPath());\r\n            dispatch(resetItems());\r\n            dispatch(resetSelectedItems());\r\n            dispatch(setLoggedOut());\r\n            dispatch(resetWebId());\r\n\r\n            dispatch(openDialog(DIALOGS.CHOOSE_LOCATION));\r\n        })\r\n        .catch(r => dispatch(setErrorMessage(String(r))))\r\n        .finally(() => dispatch(stopLoading()));\r\n};\r\n\r\nexport const clearCache = (): MyThunk => (dispatch, getState) => APIHandler.clearCache();\r\n\r\n\r\n/**\r\n * Request API to get file list for the selected path then refresh UI\r\n */\r\nexport const uploadFiles = (): MyThunk => (dispatch, getState) => {\r\n    const { path, upload: { fileList } } = getState();\r\n\r\n    if (fileList === null)\r\n        return dispatch(setErrorMessage(\"Couldn't find files to upload\"));\r\n\r\n    dispatch(displayLoading());\r\n    dispatch(resetSelectedItems());\r\n    dispatch(setFileUploadProgress(50));\r\n\r\n    APIHandler.uploadFiles(path.join('/'), fileList)\r\n        .then(r => {\r\n            dispatch(setFileUploadProgress(100));\r\n            setTimeout(f => {\r\n                dispatch(resetFileUploader());\r\n            }, 300);\r\n            dispatch(displayCurrentItemList());\r\n        })\r\n        .catch(r => dispatch(setErrorMessage(String(r))))\r\n        .finally(() => dispatch(stopLoading()));\r\n};\r\n\r\n\r\nexport const createFile = (fileName: string): MyThunk => (dispatch, getState) => {\r\n    const { path } = getState();\r\n    dispatch(displayLoading());\r\n\r\n    APIHandler.updateFile(path.join('/'), fileName, new Blob())\r\n        .then(r => {\r\n            dispatch(closeDialog(DIALOGS.CREATE_FILE));\r\n            dispatch(displayCurrentItemList());\r\n            dispatch(loadAndEditFile(fileName));\r\n            return APIHandler.getItemList(path.join('/'));\r\n        })\r\n        .then(itemList => itemList.find(item => item.getDisplayName() === fileName))\r\n        .then(item => {\r\n            if (!item)\r\n                throw new Error(\"Couldn't load created file for editing\");\r\n            dispatch(selectItem(item));\r\n            dispatch(getFileContent(item.name));\r\n        })\r\n        .catch(r => dispatch(setErrorMessage(String(r))))\r\n        .finally(() => dispatch(stopLoading()));\r\n};\r\n\r\n\r\nexport const updateTextFile = (fileName: string, content: Blob|string): MyThunk => (dispatch, getState) => {\r\n    const { path } = getState();\r\n    dispatch(displayLoading());\r\n\r\n    APIHandler.updateFile(path.join('/'), fileName, content)\r\n        .then(r => {\r\n            dispatch(closeDialog(DIALOGS.EDIT));\r\n            dispatch(displayCurrentItemList());\r\n        })\r\n        .catch(r => dispatch(setErrorMessage(String(r))))\r\n        .finally(() => dispatch(stopLoading()));\r\n}\r\n\r\n/**\r\n * Request API to display file list for the selected path\r\n */\r\nexport const displayCurrentItemList = (): MyThunk => (dispatch, getState) => {\r\n    const { path } = getState();\r\n    dispatch(displayLoading());\r\n    dispatch(resetSelectedItems());\r\n    APIHandler.getItemList(path.join('/'))\r\n        .then(items => dispatch(setItems(items)))\r\n        .catch(r => dispatch(setErrorMessage(String(r))))\r\n        .finally(() => dispatch(stopLoading()));\r\n};\r\n\r\n/**\r\n * Request API to reload the file list and then refresh UI\r\n */\r\nexport const refreshItemList = (): MyThunk => (dispatch, getState) => {\r\n    const { path } = getState();\r\n    APIHandler.clearCacheForFolder(path.join('/'));\r\n    return dispatch(displayCurrentItemList());\r\n};\r\n\r\n\r\n/**\r\n * Request API to rename file then dispatch defined events\r\n */\r\nexport const renameFile = (fileName: string, newFileName: string): MyThunk => (dispatch, getState) => {\r\n    const { path } = getState();\r\n    dispatch(displayLoading());\r\n\r\n    APIHandler.renameFile(path.join('/'), fileName, newFileName)\r\n        .then(() => {\r\n            dispatch(displayCurrentItemList());\r\n            dispatch(closeDialog(DIALOGS.RENAME));\r\n        })\r\n        .catch(r => dispatch(setErrorMessage(String(r))))\r\n        .finally(() => dispatch(stopLoading()));\r\n};\r\n\r\n/**\r\n * Request API to rename file then dispatch defined events\r\n */\r\nexport const renameFolder = (folderName: string, newFolderName: string): MyThunk => (dispatch, getState) => {\r\n    const { path } = getState();\r\n    dispatch(displayLoading());\r\n\r\n    APIHandler.renameFolder(path.join('/'), folderName, newFolderName)\r\n        .then(() => {\r\n            dispatch(displayCurrentItemList());\r\n            dispatch(closeDialog(DIALOGS.RENAME));\r\n        })\r\n        .catch(r => dispatch(setErrorMessage(String(r))))\r\n        .finally(() => dispatch(stopLoading()));\r\n};\r\n\r\n/**\r\n * Request API to download the specified items\r\n */\r\nexport const downloadItems = (items: Item[]): MyThunk => async (dispatch, getState) => {\r\n    const { path } = getState();\r\n    dispatch(displayLoading());\r\n\r\n    try {\r\n        let blob;\r\n        let downloadName = items[0].name;\r\n        if (items.length === 1 && items[0] instanceof FileItem) {\r\n            blob = await APIHandler.getFileBlob(path.join('/'), items[0].name);\r\n        }\r\n        else {\r\n            const zip = await APIHandler.getAsZip(path.join('/'), items);\r\n            blob = await zip.generateAsync({ type: 'blob' });\r\n\r\n            if (items.length > 1)\r\n                downloadName = 'Archive';\r\n            downloadName = `${downloadName}.zip`;\r\n        }\r\n\r\n        promptDownload(blob, downloadName);\r\n    }\r\n    catch (e) {\r\n        dispatch(setErrorMessage(String(e)));\r\n    }\r\n    dispatch(stopLoading());\r\n};\r\n\r\n/**\r\n * Request API to upload the items as zip archive\r\n */\r\nexport const zipAndUpload = (items: Item[]): MyThunk => (dispatch, getState) => {\r\n    const { path } = getState();\r\n    dispatch(displayLoading());\r\n\r\n    const archiveName = (items.length === 1 && items[0] instanceof FolderItem) ?\r\n        `${items[0].name}.zip`\r\n        : 'Archive.zip';\r\n\r\n    APIHandler.getAsZip(path.join('/'), items)\r\n        .then(zip => zip.generateAsync({ type: 'blob' }))\r\n        .then(blob => APIHandler.updateFile(path.join('/'), archiveName, blob))\r\n        .then(() => dispatch(displayCurrentItemList()))\r\n        .catch(r => dispatch(setErrorMessage(String(r))))\r\n        .finally(() => dispatch(stopLoading()));\r\n};\r\n\r\n/**\r\n * Request API for extracting a zip archive\r\n */\r\nexport const extractZipFile = (fileName: string): MyThunk => (dispatch, getState) => {\r\n    const { path } = getState();\r\n    dispatch(displayLoading());\r\n\r\n    APIHandler.extractZipArchive(path.join('/'), path.join('/'), fileName)\r\n        .then(r => dispatch(displayCurrentItemList()))\r\n        .catch(r => dispatch(setErrorMessage(String(r))))\r\n        .finally(() => dispatch(stopLoading()));\r\n};\r\n\r\n// code based on https://stackoverflow.com/a/30832210/6548154\r\nfunction promptDownload(file: Blob, fileName: string) {\r\n    if (window.navigator.msSaveOrOpenBlob) // IE10+\r\n        window.navigator.msSaveOrOpenBlob(file, fileName);\r\n    else { // Others\r\n        const a = document.createElement(\"a\");\r\n        const url = URL.createObjectURL(file);\r\n        a.href = url;\r\n        a.download = fileName;\r\n        document.body.appendChild(a);\r\n        a.click();\r\n        setTimeout(() => {\r\n            document.body.removeChild(a);\r\n            window.URL.revokeObjectURL(url);\r\n        }, 0);\r\n    }\r\n}\r\n\r\n/**\r\n * Opens the item in a new tab\r\n */\r\nexport const openInNewTab = (item: Item): MyThunk => (dispatch, getState) => {\r\n    window.open(item.url, '_blank');\r\n};\r\n\r\n\r\n/**\r\n * Request API to get file content then dispatch defined events\r\n */\r\nexport const getFileContent = (fileName: string): MyThunk => (dispatch, getState) => {\r\n    const { path } = getState();\r\n    dispatch(displayLoading());\r\n    dispatch(resetFileContent());\r\n\r\n    APIHandler.getFileBlob(path.join('/'), fileName)\r\n        .then(blob => dispatch(setFileContent(blob)))\r\n        .catch(r => dispatch(setErrorMessage(String(r))))\r\n        .finally(() => dispatch(stopLoading()));\r\n};\r\n\r\n\r\n/**\r\n * Request API to get file content and open the edit dialogue\r\n */\r\nexport const loadAndEditFile = (fileName: string): MyThunk => (dispatch, getState) => {\r\n    dispatch(getFileContent(fileName));\r\n    dispatch(openDialog(DIALOGS.EDIT));\r\n};\r\n\r\n\r\n/**\r\n * Request API to get file content and display it\r\n */\r\nexport const loadAndDisplayFile = (fileName: string): MyThunk => (dispatch, getState) => {\r\n    dispatch(getFileContent(fileName));\r\n    dispatch(openDialog(DIALOGS.CONTENT));\r\n};\r\n\r\n\r\n/**\r\n * Request API to display an audio or video file\r\n */\r\nexport const displaySelectedMediaFile = (): MyThunk => (dispatch, getState) => {\r\n    dispatch(openDialog(DIALOGS.MEDIA));\r\n};\r\n\r\n\r\n/**\r\n * Request API to create a folder then dispatch defined events\r\n */\r\nexport const createNewFolder = (folderName: string): MyThunk => (dispatch, getState) => {\r\n    const { path } = getState();\r\n    dispatch(displayLoading());\r\n\r\n    APIHandler.createFolder(path.join('/'), folderName)\r\n        .then(r => {\r\n            dispatch(displayCurrentItemList());\r\n            dispatch(closeDialog(DIALOGS.CREATE_FOLDER));\r\n        })\r\n        .catch(r => dispatch(setErrorMessage(String(r))))\r\n        .finally(() => dispatch(stopLoading()));\r\n};\r\n\r\n\r\n/**\r\n * Request API to remove multiple items\r\n */\r\nexport const removeItems = (items: Item[]): MyThunk => (dispatch, getState) => {\r\n    const { path } = getState();\r\n    dispatch(displayLoading());\r\n\r\n    const itemNames = items.map(f => f.name);\r\n\r\n    APIHandler.removeItems(path.join('/'), itemNames)\r\n        .then(r => dispatch(displayCurrentItemList()))\r\n        .catch(r => dispatch(setErrorMessage(String(r))))\r\n        .finally(() => dispatch(stopLoading()));\r\n};\r\n\r\n\r\n/**\r\n * Request API to move multiple items\r\n */\r\nexport const moveItems = (items: Item[], { host, path: targetPath }: { host: string, path: string[] }): MyThunk => (dispatch, getState) => {\r\n    const { path } = getState();\r\n    dispatch(displayLoading());\r\n\r\n\r\n    const destination = targetPath.join('/');\r\n    const itemNames = items.map(f => f.name);\r\n\r\n    APIHandler.moveItems(path.join('/'), destination, itemNames)\r\n        .then(r => {\r\n            dispatch(displayCurrentItemList());\r\n            dispatch(closeDialog(DIALOGS.MOVE));\r\n        })\r\n        .catch(r => dispatch(setErrorMessage(String(r))))\r\n        .finally(() => dispatch(stopLoading()));\r\n};\r\n\r\n\r\n/**\r\n * Request API to copy an item then dispatch defined events\r\n */\r\nexport const copyItems = (items: Item[], { host, path: targetPath }: { host: string, path: string[] }): MyThunk => (dispatch, getState) => {\r\n    const { path } = getState();\r\n    dispatch(displayLoading());\r\n\r\n    const destination = targetPath.join('/');\r\n    const itemNames = items.map(f => f.name);\r\n\r\n    APIHandler.copyItems(path.join('/'), destination, itemNames)\r\n        .then(r => {\r\n            dispatch(displayCurrentItemList());\r\n            dispatch(closeDialog(DIALOGS.COPY));\r\n        })\r\n        .catch(r => dispatch(setErrorMessage(String(r))))\r\n        .finally(() => dispatch(stopLoading()));\r\n};\r\n\r\n\r\n/**\r\n * This handles multiple selection by using shift key\r\n */\r\nexport const setSelectedItemsFromLastTo = (lastFile: Item): MyThunk => (dispatch, getState) => {\r\n    const { items: { inCurFolder: items, selected: selectedItems } } = getState();\r\n\r\n    const lastPreviouslySelected = [...selectedItems].pop();\r\n    if (!lastPreviouslySelected)\r\n        return dispatch(setErrorMessage(\"Couldn't enlarge selection because no items were previously selected\"));\r\n\r\n    const lastPreviouslySelectedIndex = items.indexOf(lastPreviouslySelected);\r\n    const lastSelectedIndex = items.indexOf(lastFile);\r\n\r\n    const isInRange = (num: number, start: number, end: number) => start <= num && num <= end;\r\n    const toAdd = lastSelectedIndex > lastPreviouslySelectedIndex ?\r\n        items.filter((item, index) => isInRange(index, lastPreviouslySelectedIndex, lastSelectedIndex))\r\n        : items.filter((item, index) => isInRange(index, lastSelectedIndex, lastPreviouslySelectedIndex));\r\n\r\n    dispatch(selectItems([...selectedItems, ...toAdd]));\r\n};\r\n\r\nexport const resetFileUploader = (): MyThunk => (dispatch, getState) => {\r\n    dispatch(setFileUploadProgress(0));\r\n    dispatch(closeDialog(DIALOGS.UPLOAD_FILE));\r\n    dispatch(resetFileUploadList());\r\n};\r\n\r\n\r\nexport const enterFolder = (path: string[]): MyThunk => (dispatch, getState) => {\r\n    dispatch(setPath(path));\r\n    dispatch(resetFilter());\r\n    dispatch(displayCurrentItemList());\r\n};\r\n\r\nexport const enterFolderByItem = (item: Item): MyThunk => (dispatch, getState) => {\r\n    const path = item.path;\r\n    // Open containing folder if it is a file\r\n    dispatch(enterFolder(item instanceof FileItem ? path : [...path, item.name]));\r\n};\r\n\r\nexport const moveFolderUpwardsAndRefresh = (n: number): MyThunk => (dispatch, getState) => {\r\n    dispatch(moveFolderUpwards(n));\r\n    dispatch(refreshItemList());\r\n};\r\n\r\nexport const rightClickOnFile = (item: Item): MyThunk => (dispatch, getState) => {\r\n    const { items: { selected } } = getState();\r\n    const isSelected = selected.includes(item);\r\n\r\n    !isSelected && dispatch(selectItem(item));\r\n};\r\n\r\n\r\n// Create action which can be dispatched\r\nconst makeActionCreator: <VALUE=void>(type: string) => (value: VALUE) => Action<VALUE> = <VALUE=void>(type: string) => (value: VALUE) => {\r\n    return {\r\n        type,\r\n        value\r\n    };\r\n};\r\n\r\nexport const moveFolderUpwards = makeActionCreator<number>(MOVE_FOLDER_UPWARDS);\r\nexport const setPath = makeActionCreator<string[]>(SET_PATH);\r\nexport const resetPath = () => setPath([]);\r\n\r\nexport const setLoggedIn = makeActionCreator(SET_LOGGED_IN);\r\nexport const setLoggedOut = makeActionCreator(SET_LOGGED_OUT);\r\nexport const setHost = makeActionCreator<string>(SET_HOST);\r\nexport const resetHost = makeActionCreator(RESET_HOST);\r\nexport const setWebId = makeActionCreator<string>(SET_WEB_ID);\r\nexport const resetWebId = makeActionCreator(RESET_WEB_ID);\r\n\r\nexport const setItems = makeActionCreator<Item[]>(SET_ITEMS);\r\nexport const resetItems = () => setItems([]);\r\n\r\nexport const selectItems = makeActionCreator<Item[]>(SELECT_ITEMS);\r\nexport const selectItem = (item: Item) => selectItems([item]);\r\nexport const resetSelectedItems = () => selectItems([]);\r\nexport const toggleSelectedItem = makeActionCreator<Item>(TOGGLE_SELECTED_ITEM);\r\nexport const deselectItem = makeActionCreator<Item>(DESELECT_ITEM);\r\n\r\nexport const filterItems = makeActionCreator<string>(FILTER_ITEMS);\r\nexport const resetFilter = makeActionCreator(RESET_FILTER);\r\n\r\n\r\nexport const displayLoading = makeActionCreator(DISPLAY_LOADING);\r\nexport const stopLoading = makeActionCreator(STOP_LOADING);\r\n\r\nexport const resetFileContent = makeActionCreator(RESET_LOADED_BLOB);\r\nexport const setFileContent = makeActionCreator<Blob>(SET_LOADED_BLOB);\r\nexport const setFileUploadList = makeActionCreator<FileList|null>(SET_UPLOAD_FILE_LIST);\r\nexport const resetFileUploadList = () => setFileUploadList(null);\r\nexport const setFileUploadProgress = makeActionCreator<number>(SET_UPLOAD_FILE_PROGRESS);\r\n\r\nexport const openDialog = makeActionCreator<DIALOGS>(OPEN_DIALOG);\r\nexport const closeDialog = makeActionCreator<DIALOGS>(CLOSE_DIALOG);\r\nexport const openContextMenu = makeActionCreator<{ x: number, y: number }>(OPEN_CONTEXT_MENU);\r\nexport const closeContextMenu = makeActionCreator(CLOSE_CONTEXT_MENU);\r\n\r\nexport const setErrorMessage = makeActionCreator<string>(SET_ERROR_MESSAGE);\r\nexport const resetErrorMessage = () => setErrorMessage('');\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    setSelectedItemsFromLastTo, loadAndEditFile, loadAndDisplayFile, displaySelectedMediaFile,\r\n    rightClickOnFile, enterFolderByItem, MyDispatch, openContextMenu, toggleSelectedItem, selectItems\r\n} from '../../Actions/Actions';\r\nimport './File.css';\r\n\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport FolderIcon from '@material-ui/icons/Folder';\r\nimport FileIcon from '@material-ui/icons/InsertDriveFile';\r\nimport blue from '@material-ui/core/colors/blue';\r\nimport { FileItem, Item } from '../../Api/Item';\r\nimport { AppState } from '../../Reducers/reducer';\r\n\r\nclass File extends Component<FileProps> {\r\n    render() {\r\n        const { isSelected, item, handleClick, handleDoubleClick, handleContextMenu } = this.props;\r\n        const avatarStyle = {\r\n            backgroundColor: isSelected ? blue['A200'] : undefined\r\n        };\r\n        const realSize = (item instanceof FileItem) ? item.getDisplaySize() : null;\r\n        return (\r\n            <div className=\"File\" onClick={handleClick} onDoubleClick={handleDoubleClick} onContextMenu={handleContextMenu} data-selected={isSelected}>\r\n                <ListItem>\r\n                    <ListItemAvatar>\r\n                        <Avatar style={avatarStyle}>\r\n                            { (item instanceof FileItem) ? <FileIcon /> : <FolderIcon />}\r\n                        </Avatar>\r\n                    </ListItemAvatar>\r\n                    <ListItemText className=\"filename\" primary={item.getDisplayName()} secondary={realSize} />\r\n                </ListItem>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\ninterface FileOwnProps {\r\n    item: Item;\r\n}\r\ninterface StateProps {\r\n    isSelected: boolean;\r\n}\r\ninterface DispatchProps {\r\n    handleClick(event: React.MouseEvent<HTMLDivElement, MouseEvent>): void;\r\n    handleDoubleClick(): void;\r\n    handleContextMenu(event: React.MouseEvent<HTMLDivElement, MouseEvent>): void;\r\n}\r\ninterface FileProps extends FileOwnProps, StateProps, DispatchProps {}\r\n\r\n\r\nconst mapStateToProps = (state: AppState, ownProps: FileOwnProps): StateProps => {\r\n    return {\r\n        isSelected: state.items.selected.includes(ownProps.item)\r\n    };\r\n};\r\n\r\n\r\nconst mapDispatchToProps = (dispatch: MyDispatch, ownProps: FileOwnProps): DispatchProps => {\r\n    return {\r\n        handleDoubleClick: () => {\r\n            const item = ownProps.item;\r\n\r\n            if (item instanceof FileItem) {\r\n                if (item.isEditable())\r\n                    dispatch(loadAndEditFile(item.name));\r\n                else if (item.isImage())\r\n                    dispatch(loadAndDisplayFile(item.name));\r\n                else if (item.isMedia())\r\n                    dispatch(displaySelectedMediaFile());\r\n            }\r\n            else\r\n                dispatch(enterFolderByItem(item));\r\n        },\r\n\r\n        handleContextMenu: (event: React.MouseEvent<HTMLDivElement, MouseEvent> | React.TouchEvent) => {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n\r\n            let x = 0;\r\n            let y = 0;\r\n\r\n            if (event.nativeEvent instanceof MouseEvent) {\r\n                x = event.nativeEvent.clientX;\r\n                y = event.nativeEvent.clientY;\r\n            }\r\n            else if (event.nativeEvent instanceof TouchEvent) {\r\n                x = event.nativeEvent.touches[0].pageX;\r\n                y = event.nativeEvent.touches[0].pageY;\r\n            }\r\n            else {\r\n                console.warn(\"Unknown click event\", event);\r\n            }\r\n\r\n            if (event.shiftKey) {\r\n                dispatch(setSelectedItemsFromLastTo(ownProps.item));\r\n            } else {\r\n                dispatch(rightClickOnFile(ownProps.item));\r\n            }\r\n            \r\n            dispatch(openContextMenu({ x, y }));\r\n        },\r\n\r\n        handleClick: (event: React.MouseEvent<HTMLDivElement, MouseEvent> | React.TouchEvent) => {\r\n            event.stopPropagation();\r\n\r\n            if (event.ctrlKey) {\r\n                dispatch(toggleSelectedItem(ownProps.item));\r\n            } else if (event.shiftKey) {\r\n                dispatch(setSelectedItemsFromLastTo(ownProps.item));\r\n            } else {\r\n                dispatch(selectItems([ownProps.item]));\r\n            }\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(File);\r\n","import React from 'react';\r\nimport './FileListEmptyMessage.css';\r\n\r\nexport default function FileListEmptyMessage() {\r\n    return (\r\n        <div className=\"FileListEmptyMessage\">\r\n            No files in this folder\r\n        </div>\r\n    );\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles, createStyles, Theme, WithStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n  progress: {\r\n    margin: theme.spacing.unit * 10,\r\n  },\r\n});\r\n\r\nfunction Loader(props: LoaderProps) {\r\n    return (\r\n        <Grid container justify=\"center\">\r\n            <CircularProgress className={props.classes.progress} color=\"secondary\" />\r\n        </Grid>\r\n    );\r\n}\r\n\r\ninterface LoaderProps extends WithStyles<typeof styles> {};\r\n\r\nexport default withStyles(styles)(Loader);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport File from '../File/File'; \r\nimport FileListEmptyMessage from './FileListEmptyMessage';\r\nimport Loader from '../Loader/Loader'; \r\nimport './FileList.css';\r\nimport { Item } from '../../Api/Item';\r\nimport { AppState } from '../../Reducers/reducer';\r\n\r\nclass FileList extends Component<FileListProps> {\r\n    render() {\r\n        const { items, isLoading } = this.props;\r\n        const itemComponents = items.map((item, key) => {\r\n            return <File item={item} key={key} />;\r\n        });\r\n\r\n        return <div className=\"FileList\">\r\n            { isLoading ? \r\n                <Loader /> : \r\n                itemComponents.length ? itemComponents : <FileListEmptyMessage />\r\n            }\r\n        </div>\r\n    }\r\n}\r\n\r\ninterface StateProps {\r\n    items: Item[];\r\n    isLoading: boolean;\r\n}\r\ninterface FileListProps extends StateProps {};\r\n\r\nconst mapStateToProps = (state: AppState): StateProps => {\r\n    const items = state.items.inCurFolder\r\n        .filter(item => filterMatch(item.getDisplayName(), state.items.filter));\r\n\r\n    return {\r\n        items,\r\n        isLoading: state.loading,\r\n    };\r\n};\r\n\r\n\r\nconst mapDispatchToProps = () => ({});\r\n\r\nconst filterMatch = (first: string, second: string) => {\r\n    return first.toLocaleLowerCase().match(second.toLocaleLowerCase());\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FileList);\r\n\r\n\r\n","import React from 'react';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { connect } from 'react-redux';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CreateNewFolderIcon from '@material-ui/icons/CreateNewFolder';\r\nimport { openDialog, MyDispatch } from '../../../Actions/Actions';\r\nimport { AppState } from '../../../Reducers/reducer';\r\nimport { DIALOGS } from '../../../Actions/actionTypes';\r\n\r\nfunction CreateFolderAction(props: CreateFolderActionProps) {\r\n    const {handleClick, handleClose} = props;\r\n\r\n    const handleCloseAfter = (callback: () => void) => () => {\r\n        callback();\r\n        handleClose();\r\n    };\r\n\r\n    return (\r\n        <MenuItem onClick={handleCloseAfter(handleClick)}>\r\n            <ListItemIcon>\r\n                <CreateNewFolderIcon />\r\n            </ListItemIcon>\r\n            <Typography variant=\"inherit\">\r\n                Create folder\r\n            </Typography>\r\n        </MenuItem>        \r\n    );\r\n}\r\n\r\ninterface CreateFolderActionProps {\r\n    handleClick(): void;\r\n    handleClose(): void;\r\n}\r\n\r\nconst mapStateToProps = (state: AppState) => {\r\n    return {};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: MyDispatch) => {\r\n    return {\r\n        handleClick: () => {\r\n            dispatch(openDialog(DIALOGS.CREATE_FOLDER));\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateFolderAction);\r\n","import React from 'react';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { connect } from 'react-redux';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\r\nimport { openDialog, MyDispatch } from '../../../Actions/Actions';\r\nimport { AppState } from '../../../Reducers/reducer';\r\nimport { DIALOGS } from '../../../Actions/actionTypes';\r\n\r\nfunction CreateFileAction(props: CreateFileActionProps) {\r\n    const {handleClick, handleClose} = props;\r\n\r\n    const handleCloseAfter = (callback: () => void) => () => {\r\n        callback();\r\n        handleClose();\r\n    };\r\n\r\n    return (\r\n        <MenuItem onClick={handleCloseAfter(handleClick)}>\r\n            <ListItemIcon>\r\n                <InsertDriveFileIcon />\r\n            </ListItemIcon>\r\n            <Typography variant=\"inherit\">\r\n                Create file\r\n            </Typography>\r\n        </MenuItem>        \r\n    );\r\n}\r\n\r\ninterface CreateFileActionProps {\r\n    handleClick(): void;\r\n    handleClose(): void;\r\n}\r\n\r\nconst mapStateToProps = (state: AppState) => {\r\n    return {};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: MyDispatch) => {\r\n    return {\r\n        handleClick: () => {\r\n            dispatch(openDialog(DIALOGS.CREATE_FILE));\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateFileAction);\r\n","import React from 'react';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { connect } from 'react-redux';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport { openDialog, MyDispatch } from '../../../Actions/Actions';\r\nimport { AppState } from '../../../Reducers/reducer';\r\nimport { DIALOGS } from '../../../Actions/actionTypes';\r\n\r\nfunction UploadFileAction(props: UploadFileActionProps) {\r\n    const { handleClick, handleClose } = props;\r\n\r\n    const handleCloseAfter = (callback: () => void) => () => {\r\n        callback();\r\n        handleClose();\r\n    };\r\n\r\n    return (\r\n        <MenuItem onClick={handleCloseAfter(handleClick)}>\r\n            <ListItemIcon>\r\n                <CloudUploadIcon />\r\n            </ListItemIcon>\r\n            <Typography variant=\"inherit\">\r\n                Upload files\r\n            </Typography>\r\n        </MenuItem>        \r\n    );\r\n}\r\n\r\ninterface UploadFileActionProps {\r\n    handleClick(): void;\r\n    handleClose(): void;\r\n}\r\n\r\nconst mapStateToProps = (state: AppState) => {\r\n    return {};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: MyDispatch) => {\r\n    return {\r\n        handleClick: () => {\r\n            dispatch(openDialog(DIALOGS.UPLOAD_FILE));\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UploadFileAction);\r\n","import React from 'react';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { connect } from 'react-redux';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport FolderSharedIcon from '@material-ui/icons/FolderSharedOutlined';\r\nimport { openDialog, MyDispatch } from '../../../Actions/Actions';\r\nimport { AppState } from '../../../Reducers/reducer';\r\nimport { DIALOGS } from '../../../Actions/actionTypes';\r\n\r\nfunction ChooseLocationAction(props: ChooseLocationActionProps) {\r\n    const { handleClick, handleClose } = props;\r\n\r\n    const handleCloseAfter = (callback: () => void) => () => {\r\n        callback();\r\n        handleClose();\r\n    };\r\n\r\n    return (\r\n        <MenuItem onClick={handleCloseAfter(handleClick)}>\r\n            <ListItemIcon>\r\n                <FolderSharedIcon />\r\n            </ListItemIcon>\r\n            <Typography variant=\"inherit\">\r\n                Choose root location\r\n            </Typography>\r\n        </MenuItem>        \r\n    );\r\n}\r\n\r\ninterface ChooseLocationActionProps {\r\n    handleClick(): void;\r\n    handleClose(): void;\r\n}\r\n\r\nconst mapStateToProps = (state: AppState) => {\r\n    return {};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: MyDispatch) => {\r\n    return {\r\n        handleClick: () => {\r\n            dispatch(openDialog(DIALOGS.CHOOSE_LOCATION));\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ChooseLocationAction);\r\n","import React from 'react';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport { connect } from 'react-redux';\r\nimport CreateFolderAction from '../ContextMenu/ContextMenuActions/CreateFolderAction';\r\nimport CreateFileAction from '../ContextMenu/ContextMenuActions/CreateFileAction';\r\nimport UploadFileAction from '../ContextMenu/ContextMenuActions/UploadFileAction';\r\nimport ChooseLocationAction from '../ContextMenu/ContextMenuActions/ChooseLocationAction';\r\n\r\nclass ThreeDotsMenu extends React.Component {\r\n  state = {\r\n    anchorEl: null as HTMLElement|null,\r\n  };\r\n\r\n  handleClick = (event: React.MouseEvent<HTMLElement, MouseEvent>) => {\r\n    this.setState({ anchorEl: event.currentTarget });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ anchorEl: null });\r\n  };\r\n\r\n  render() {\r\n    const { anchorEl } = this.state;\r\n\r\n    return (\r\n      <div style={{marginLeft:'1em'}}>\r\n        <IconButton color=\"inherit\" \r\n          aria-label=\"More\"\r\n          aria-owns={Boolean(anchorEl) ? 'long-menu' : undefined}\r\n          aria-haspopup=\"true\"\r\n          onClick={this.handleClick}>\r\n          <MoreVertIcon />\r\n        </IconButton>\r\n\r\n        <Menu anchorEl={anchorEl} open={Boolean(anchorEl)} onClose={this.handleClose}>\r\n          <CreateFolderAction handleClose={this.handleClose} />\r\n          <CreateFileAction handleClose={this.handleClose} />\r\n          <UploadFileAction handleClose={this.handleClose} />\r\n          <ChooseLocationAction handleClose={this.handleClose} />\r\n        </Menu>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = () => ({});\r\n\r\nconst mapDispatchToProps = () => ({});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ThreeDotsMenu);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles, createStyles, Theme, WithStyles } from '@material-ui/core/styles';\r\nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\r\nimport Button from '@material-ui/core/Button';\r\nimport './BreadcrumbText.css';\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n  lastPath: {\r\n    display: 'block',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'none'\r\n    }\r\n  },\r\n  paths: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    }\r\n  }\r\n});\r\n\r\nclass BreadcrumbText extends Component<BreadcrumbTextProps> {\r\n\r\n    render() {\r\n        const { classes, handleClickPath, path, rootTitle, handleGoBack, canGoBack } = this.props;\r\n\r\n        const separator = <span>&gt;</span>;\r\n        const rootPath = <span onClick={() => handleClickPath(-1)} data-index={0}>\r\n            { rootTitle } { path.length ? separator : '' }\r\n        </span>;\r\n        const lastPath = [...path].pop() || rootTitle;\r\n\r\n        const directories = path.map((dir, index) => {\r\n            return <span key={index} data-index={index} onClick={(e) => handleClickPath(index)}>\r\n                <span>{dir}</span> { path.length -1 !== index ? separator : '' }&nbsp;\r\n            </span>\r\n        });\r\n\r\n        return (\r\n            <div className=\"BreadcrumbText\">\r\n                <div className={classes.lastPath}>\r\n                    <Button onClick={handleGoBack} color=\"inherit\" type=\"button\" style={{display: canGoBack ? 'inline-flex' : 'none'}}>\r\n                        <KeyboardArrowLeftIcon />\r\n                    </Button>\r\n                    {lastPath}\r\n                </div>\r\n                <div className={classes.paths}>{rootPath} {directories}</div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\ninterface BreadcrumbTextProps extends WithStyles<typeof styles> {\r\n    handleClickPath(index: number): void;\r\n    handleGoBack(): void;\r\n    canGoBack: boolean;\r\n    path: string[];\r\n    rootTitle: string;\r\n\r\n}\r\n\r\nconst mapDispatchToProps = () => ({});\r\n\r\nconst mapStateToProps = () => ({});\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(BreadcrumbText));\r\n","import React, { ChangeEvent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { fade } from '@material-ui/core/styles/colorManipulator';\r\nimport { withStyles, Theme, createStyles, WithStyles } from '@material-ui/core/styles';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport { connect } from 'react-redux';\r\nimport { refreshItemList, moveFolderUpwardsAndRefresh, filterItems, MyDispatch } from '../../Actions/Actions';\r\nimport ThreeDotsMenu from './ThreeDotsMenu';\r\nimport BreadcrumbText from '../Breadcrumb/BreadcrumbText';\r\nimport { AppState } from '../../Reducers/reducer';\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n  root: {\r\n    width: '100%',\r\n    marginBottom: '4.3em'\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginLeft: -12,\r\n    marginRight: 20,\r\n  },\r\n  title: {\r\n    display: 'block', // was none\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing.unit,\r\n      width: 'auto',\r\n      display: 'block'\r\n    },\r\n  },\r\n  searchIcon: {\r\n    width: theme.spacing.unit * 9,\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n    width: '100%',\r\n  },\r\n  inputInput: {\r\n    paddingTop: theme.spacing.unit,\r\n    paddingRight: theme.spacing.unit,\r\n    paddingBottom: theme.spacing.unit,\r\n    paddingLeft: theme.spacing.unit * 10,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: 100,\r\n      '&:focus': {\r\n        width: 200,\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nfunction SearchAppBar(props: SearchAppBarProps) {\r\n  const { classes, path, filter, moveUpwards, canGoBack, handleChange, handleRefresh } = props;\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"fixed\">\r\n        <Toolbar>\r\n          <Typography className={classes.title} variant=\"h6\" color=\"inherit\" noWrap>\r\n            <BreadcrumbText \r\n                path={path} \r\n                handleClickPath={index => moveUpwards(path.length - index - 1)} \r\n                handleGoBack={() => moveUpwards(1)}\r\n                canGoBack={canGoBack}\r\n                rootTitle=\"Solid Filemanager\"\r\n            />\r\n          </Typography>\r\n          <div className={classes.grow} />\r\n\r\n          <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              placeholder=\"Search…\"\r\n              value={filter}\r\n              onChange={handleChange}\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n            />\r\n          </div>\r\n          <IconButton color=\"inherit\" aria-label=\"Refresh\" onClick={handleRefresh}>\r\n            <RefreshIcon/>\r\n          </IconButton>\r\n          <ThreeDotsMenu />\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface StateProps {\r\n  filter: string;\r\n  path: string[];\r\n  canGoBack: boolean; \r\n}\r\ninterface DispatchProps {\r\n  handleChange(event: ChangeEvent<HTMLInputElement>): void;\r\n  moveUpwards(n: number): void;\r\n  handleRefresh(): void;\r\n}\r\ninterface SearchAppBarProps extends StateProps, DispatchProps, WithStyles<typeof styles> {\r\n\r\n}\r\n\r\n\r\nconst mapStateToProps = (state: AppState): StateProps => {\r\n    return {\r\n        filter: state.items.filter,\r\n        path: state.path,\r\n        canGoBack: state.path.length > 0,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: MyDispatch): DispatchProps => {\r\n    return {\r\n        handleChange: (event) => {\r\n            dispatch(filterItems(event.currentTarget.value));\r\n        },\r\n        moveUpwards: (n) => {\r\n          console.log('moveUpwards', n);\r\n          dispatch(moveFolderUpwardsAndRefresh(n));\r\n        },\r\n        handleRefresh: () => dispatch(refreshItemList())\r\n    };\r\n};\r\n\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(SearchAppBar));\r\n","import React from 'react';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { connect } from 'react-redux';\r\nimport { loadAndDisplayFile, displaySelectedMediaFile, loadAndEditFile, enterFolderByItem, MyDispatch } from '../../../Actions/Actions';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport OpenInBrowserIcon from '@material-ui/icons/OpenInBrowser';\r\nimport { FileItem, FolderItem, Item } from '../../../Api/Item';\r\nimport { AppState } from '../../../Reducers/reducer';\r\n\r\nfunction OpenAction(props: OpenActionProps) {\r\n    const { handleClick, selectedItems } = props;\r\n    return (\r\n        <MenuItem onClick={() => handleClick(selectedItems)}>\r\n            <ListItemIcon>\r\n                <OpenInBrowserIcon />\r\n            </ListItemIcon>\r\n            <Typography variant=\"inherit\">\r\n                Open\r\n            </Typography>\r\n        </MenuItem>        \r\n    );\r\n}\r\n\r\ninterface OpenActionProps {\r\n    handleClick(selectedItems: Item[]): void;\r\n    selectedItems: Item[];\r\n}\r\n\r\nconst mapStateToProps = (state: AppState) => {\r\n    return {\r\n        selectedItems: state.items.selected\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: MyDispatch) => {\r\n    return {\r\n        handleClick: (selectedItems: Item[]) => {\r\n            const item = selectedItems[0];\r\n\r\n            if (item instanceof FolderItem)\r\n                dispatch(enterFolderByItem(item));\r\n            else if (item instanceof FileItem) {\r\n                if (item.isEditable())\r\n                    dispatch(loadAndEditFile(item.name));\r\n                else if (item.isImage())\r\n                    dispatch(loadAndDisplayFile(item.name));\r\n                else if (item.isMedia())\r\n                    dispatch(displaySelectedMediaFile());\r\n            }\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(OpenAction);\r\n","import React from 'react';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { connect } from 'react-redux';\r\nimport { removeItems, MyDispatch } from '../../../Actions/Actions';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Item } from '../../../Api/Item';\r\nimport { AppState } from '../../../Reducers/reducer';\r\n\r\nfunction RemoveAction(props: RemoveActionProps) {\r\n    const { handleClick, selectedItems } = props;\r\n    return (\r\n        <MenuItem onClick={() => handleClick(selectedItems)}>\r\n            <ListItemIcon>\r\n                <DeleteIcon />\r\n            </ListItemIcon>\r\n            <Typography variant=\"inherit\">\r\n                Remove\r\n            </Typography>\r\n        </MenuItem>        \r\n    );\r\n}\r\n\r\ninterface RemoveActionProps {\r\n    handleClick(selectedItems: Item[]): void;\r\n    selectedItems: Item[];\r\n}\r\n\r\nconst mapStateToProps = (state: AppState) => {\r\n    return {\r\n        selectedItems: state.items.selected\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: MyDispatch) => {\r\n    return {\r\n        handleClick: (selectedItems: Item[]) => {\r\n            dispatch(removeItems(selectedItems));\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RemoveAction);\r\n","import React from 'react';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { connect } from 'react-redux';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport HowToVoteIcon from '@material-ui/icons/HowToVote';\r\nimport { openDialog, MyDispatch } from '../../../Actions/Actions';\r\nimport { AppState } from '../../../Reducers/reducer';\r\nimport { DIALOGS } from '../../../Actions/actionTypes';\r\n\r\nfunction MoveAction(props: MoveActionProps) {\r\n    const { handleClick } = props;\r\n\r\n    return (\r\n        <MenuItem onClick={() => handleClick()}>\r\n            <ListItemIcon>\r\n                <HowToVoteIcon />\r\n            </ListItemIcon>\r\n            <Typography variant=\"inherit\">\r\n                Move\r\n            </Typography>\r\n        </MenuItem>        \r\n    );\r\n}\r\n\r\ninterface MoveActionProps {\r\n    handleClick(): void;\r\n}\r\n\r\nconst mapStateToProps = (state: AppState) => {\r\n    return {};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: MyDispatch) => {\r\n    return {\r\n        handleClick: () => {\r\n            dispatch(openDialog(DIALOGS.MOVE));\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MoveAction);\r\n","import React from 'react';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { connect } from 'react-redux';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\nimport { openDialog, MyDispatch } from '../../../Actions/Actions';\r\nimport { AppState } from '../../../Reducers/reducer';\r\nimport { DIALOGS, Action } from '../../../Actions/actionTypes';\r\n\r\nfunction CopyAction(props: CopyActionProps) {\r\n    const { handleClick } = props;\r\n\r\n    return (\r\n        <MenuItem onClick={handleClick}>\r\n            <ListItemIcon>\r\n                <FileCopyIcon />\r\n            </ListItemIcon>\r\n            <Typography variant=\"inherit\">\r\n                Copy\r\n            </Typography>\r\n        </MenuItem>        \r\n    );\r\n}\r\n\r\ninterface CopyActionProps {\r\n    handleClick(): void;\r\n}\r\n\r\nconst mapStateToProps = (state: AppState) => {\r\n    return {};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: MyDispatch) => {\r\n    return {\r\n        handleClick: () => {\r\n            dispatch(openDialog(DIALOGS.COPY));\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CopyAction);\r\n","import React from 'react';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { connect } from 'react-redux';\r\nimport { loadAndEditFile, MyDispatch } from '../../../Actions/Actions';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport OpenInBrowserIcon from '@material-ui/icons/OpenInBrowser';\r\nimport { Item } from '../../../Api/Item';\r\nimport { AppState } from '../../../Reducers/reducer';\r\n\r\nfunction OpenAction(props: OpenActionProps) {\r\n    const { handleClick, selectedItems } = props;\r\n    return (\r\n        <MenuItem onClick={() => handleClick(selectedItems)}>\r\n            <ListItemIcon>\r\n                <OpenInBrowserIcon />\r\n            </ListItemIcon>\r\n            <Typography variant=\"inherit\">\r\n                Edit\r\n            </Typography>\r\n        </MenuItem>        \r\n    );\r\n}\r\n\r\ninterface OpenActionProps {\r\n    handleClick(selectedItems: Item[]): void;\r\n    selectedItems: Item[];\r\n}\r\n\r\nconst mapStateToProps = (state: AppState) => {\r\n    return {\r\n        selectedItems: state.items.selected\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: MyDispatch) => {\r\n    return {\r\n        handleClick: (selectedItems: Item[]) => {\r\n            dispatch(loadAndEditFile(selectedItems[0].name));\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(OpenAction);\r\n","import React from 'react';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { connect } from 'react-redux';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport WrapTextIcon from '@material-ui/icons/WrapText';\r\nimport { openDialog, MyDispatch } from '../../../Actions/Actions';\r\nimport { AppState } from '../../../Reducers/reducer';\r\nimport { DIALOGS } from '../../../Actions/actionTypes';\r\n\r\nfunction MoveAction(props: MoveActionProps) {\r\n    const { handleClick } = props;\r\n\r\n    return (\r\n        <MenuItem onClick={handleClick}>\r\n            <ListItemIcon>\r\n                <WrapTextIcon />\r\n            </ListItemIcon>\r\n            <Typography variant=\"inherit\">\r\n                Rename\r\n            </Typography>\r\n        </MenuItem>        \r\n    );\r\n}\r\n\r\ninterface MoveActionProps {\r\n    handleClick(): void;\r\n}\r\n\r\nconst mapStateToProps = (state: AppState) => {\r\n    return {};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: MyDispatch) => {\r\n    return {\r\n        handleClick: () => {\r\n            dispatch(openDialog(DIALOGS.RENAME));\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MoveAction);\r\n","import React from 'react';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { connect } from 'react-redux';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ArchiveIcon from '@material-ui/icons/Archive';\r\nimport { zipAndUpload, MyDispatch } from '../../../Actions/Actions';\r\nimport { Item } from '../../../Api/Item';\r\nimport { AppState } from '../../../Reducers/reducer';\r\n\r\nfunction ZipAction(props: ZipActionProps) {\r\n    const { handleClick, selectedItems } = props;\r\n\r\n    return (\r\n        <MenuItem onClick={() => handleClick(selectedItems)}>\r\n            <ListItemIcon>\r\n                <ArchiveIcon />\r\n            </ListItemIcon>\r\n            <Typography variant=\"inherit\">\r\n                Zip here\r\n            </Typography>\r\n        </MenuItem>        \r\n    );\r\n}\r\n\r\ninterface ZipActionProps {\r\n    handleClick(selectedItems: Item[]): void;\r\n    selectedItems: Item[];\r\n}\r\n\r\nconst mapStateToProps = (state: AppState) => {\r\n    return {\r\n        selectedItems: state.items.selected\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: MyDispatch) => {\r\n    return {\r\n        handleClick: (selectedItems: Item[]) => {\r\n            dispatch(zipAndUpload(selectedItems));\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ZipAction);\r\n","import React from 'react';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { connect } from 'react-redux';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport UnarchiveIcon from '@material-ui/icons/Unarchive';\r\nimport { extractZipFile, MyDispatch } from '../../../Actions/Actions';\r\nimport { AppState } from '../../../Reducers/reducer';\r\nimport { Item } from '../../../Api/Item';\r\n\r\nfunction ExtractAction(props: ExtractActionProps) {\r\n    const {handleClick, selectedItems} = props;\r\n\r\n    return (\r\n        <MenuItem onClick={() => handleClick(selectedItems)}>\r\n            <ListItemIcon>\r\n                <UnarchiveIcon />\r\n            </ListItemIcon>\r\n            <Typography variant=\"inherit\">\r\n                Extract here\r\n            </Typography>\r\n        </MenuItem>        \r\n    );\r\n}\r\n\r\ninterface ExtractActionProps {\r\n    handleClick(selectedItems: Item[]): void;\r\n    selectedItems: Item[];\r\n}\r\n\r\nconst mapStateToProps = (state: AppState) => {\r\n    return {\r\n        selectedItems: state.items.selected\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: MyDispatch) => {\r\n    return {\r\n        handleClick: (selectedItems: Item[]) => {\r\n            dispatch(extractZipFile(selectedItems[0].name));\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ExtractAction);\r\n","import React from 'react';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { connect } from 'react-redux';\r\nimport { downloadItems, MyDispatch } from '../../../Actions/Actions';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\r\nimport { FileItem, Item } from '../../../Api/Item';\r\nimport { AppState } from '../../../Reducers/reducer';\r\n\r\nfunction DownloadAction(props: DownloadActionProps) {\r\n    const { handleClick, selectedItems } = props;\r\n    return (\r\n        <MenuItem onClick={() => handleClick(selectedItems)}>\r\n            <ListItemIcon>\r\n                <CloudDownloadIcon />\r\n            </ListItemIcon>\r\n            <Typography variant=\"inherit\">\r\n                {(selectedItems.length === 1 && selectedItems[0] instanceof FileItem) ? \r\n                    'Download'\r\n                    : 'Download Zip'\r\n                }\r\n            </Typography>\r\n        </MenuItem>        \r\n    );\r\n}\r\n\r\ninterface DownloadActionProps {\r\n    handleClick(selectedItems: Item[]): void;\r\n    selectedItems: Item[];\r\n}\r\n\r\nconst mapStateToProps = (state: AppState) => {\r\n    return {\r\n        selectedItems: state.items.selected\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: MyDispatch) => {\r\n    return {\r\n        handleClick: (selectedItems: Item[]) => {\r\n            dispatch(downloadItems(selectedItems));\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DownloadAction);\r\n","import React from 'react';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { connect } from 'react-redux';\r\nimport { openInNewTab, MyDispatch } from '../../../Actions/Actions';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport LinkIcon from '@material-ui/icons/Link';\r\nimport { Item } from '../../../Api/Item';\r\nimport { AppState } from '../../../Reducers/reducer';\r\n\r\nfunction OpenInNewTabAction(props: OpenInNewTabActionProps) {\r\n    const { handleClick, selectedItems } = props;\r\n    return (\r\n        <MenuItem onClick={() => handleClick(selectedItems)}>\r\n            <ListItemIcon>\r\n                <LinkIcon   />\r\n            </ListItemIcon>\r\n            <Typography variant=\"inherit\">\r\n                Open in new Tab\r\n            </Typography>\r\n        </MenuItem>        \r\n    );\r\n}\r\n\r\ninterface OpenInNewTabActionProps {\r\n    handleClick(selectedItems: Item[]): void;\r\n    selectedItems: Item[];\r\n}\r\n\r\nconst mapStateToProps = (state: AppState) => {\r\n    return {\r\n        selectedItems: state.items.selected\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: MyDispatch) => {\r\n    return {\r\n        handleClick: (selectedItems: Item[]) => {\r\n            dispatch(openInNewTab(selectedItems[0]));\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(OpenInNewTabAction);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './ContextMenu.css';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport OpenAction from './ContextMenuActions/OpenAction';\r\nimport RemoveAction from './ContextMenuActions/RemoveAction';\r\nimport MoveAction from './ContextMenuActions/MoveAction';\r\nimport CopyAction from './ContextMenuActions/CopyAction';\r\nimport EditAction from './ContextMenuActions/EditAction';\r\nimport RenameAction from './ContextMenuActions/RenameAction';\r\nimport ZipAction from './ContextMenuActions/ZipAction';\r\nimport ExtractAction from './ContextMenuActions/ExtractAction';\r\nimport DownloadAction from './ContextMenuActions/DownloadAction';\r\nimport OpenInNewTabAction from './ContextMenuActions/OpenInNewTabAction';\r\nimport { Item, FileItem, FolderItem } from '../../Api/Item';\r\nimport { AppState } from '../../Reducers/reducer';\r\n\r\nclass ContextMenu extends Component<ContextMenuProps> {\r\n\r\n    render() {\r\n        const { acts, open, x, y } = this.props;\r\n\r\n        return (\r\n            <div>\r\n                <Menu\r\n                    anchorReference=\"anchorPosition\"\r\n                    anchorPosition={{ top: y, left: x }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'left',\r\n                    }}\r\n                    open={open}\r\n                    onClose={() => { }}\r\n                    PaperProps={{ style: { width: 190 } }}>\r\n                    {acts.includes('open') && <OpenAction />}\r\n                    {acts.includes('openInNewTab') && <OpenInNewTabAction />}\r\n                    {acts.includes('download') && <DownloadAction />}\r\n                    {acts.includes('compress') && <ZipAction />}\r\n                    {acts.includes('extract') && <ExtractAction />}\r\n                    {acts.includes('edit') && <EditAction />}\r\n                    {acts.includes('copy') && <CopyAction />}\r\n                    {acts.includes('move') && <MoveAction />}\r\n                    {acts.includes('rename') && <RenameAction />}\r\n                    {acts.includes('remove') && <RemoveAction />}\r\n                </Menu>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\ninterface StateProps {\r\n    acts: string[];\r\n    open: boolean;\r\n    x: number;\r\n    y: number;\r\n}\r\ninterface ContextMenuProps extends StateProps {}\r\n\r\n\r\nconst mapStateToProps = (state: AppState): StateProps => {\r\n    return {\r\n        x: state.contextMenu.x,\r\n        y: state.contextMenu.y,\r\n        open: state.contextMenu.open,\r\n        acts: getActionsForMultipleItems(state.items.selected),\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = () => ({});\r\n\r\n\r\n/**\r\n * Get available actions for multiple items\r\n */\r\nconst getActionsForMultipleItems = (items: Item[]): string[] => {\r\n    return items.length === 1 ?\r\n        getActionsForItem(items[0])\r\n        : [\r\n            'copy',\r\n            'move',\r\n            'remove',\r\n            'download',\r\n            'compress',\r\n        ];\r\n};\r\n\r\n/**\r\n * Get available actions for an item\r\n */\r\nconst getActionsForItem = (item: Item) => {\r\n    const commonActions = [\r\n        'openInNewTab',\r\n        'copy',\r\n        'move',\r\n        'rename',\r\n        'remove',\r\n        'download',\r\n    ];\r\n    return [\r\n        ...commonActions,\r\n        ...((item instanceof FileItem) ?\r\n            getActionsForFile(item)\r\n            : getActionsForFolder(item))\r\n    ];\r\n};\r\n\r\n/**\r\n * Get available file specific actions\r\n */\r\nconst getActionsForFile = (file: FileItem) => {\r\n    const actions = [];\r\n    file.isEditable() && actions.push('edit');\r\n    file.isExtractable() && actions.push('extract');\r\n    (file.isImage() || file.isMedia()) && actions.push('open');\r\n\r\n    return actions;\r\n};\r\n\r\n/**\r\n * Get available folder specific actions\r\n */\r\nconst getActionsForFolder = (folder: FolderItem) => {\r\n    return [\r\n        'open',\r\n        'compress'\r\n    ];\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContextMenu);","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createBrowserHistory, History, Location } from \"history\";\r\nimport { MyDispatch, setHost, enterFolder } from \"../../Actions/Actions\";\r\nimport { AppState } from \"../../Reducers/reducer\";\r\n\r\nclass HistoryHandler extends Component<HistoryHandlerProps> {\r\n    private history: History<LocationState>;\r\n    private states: LocationState[];\r\n    private stateIndex: number;\r\n\r\n    constructor(props: HistoryHandlerProps) {\r\n        super(props);\r\n\r\n        this.states = [];\r\n        this.stateIndex = -1;\r\n        this.history = createBrowserHistory();\r\n        this.history.listen((location, action) => {\r\n            switch(action) {\r\n                case 'POP':\r\n                    this.handlePop(location);\r\n                    break;\r\n                case 'REPLACE':\r\n                    this.handleReplace(location);\r\n                    break;\r\n                case 'PUSH':\r\n                    this.handlePush(location);\r\n                    break;\r\n            }\r\n        });\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        const { host, path } = this.props;\r\n\r\n        // Don't update history when the host is invalid\r\n        if (host === null)\r\n            return;\r\n        if (this.states.length === 0 || this.stateIndex < 0)\r\n            return this.updateBrowserHistory();\r\n        \r\n        const prevState = this.states[this.stateIndex];\r\n\r\n        if (!locationsEqual({ host, path }, prevState))\r\n            this.updateBrowserHistory();\r\n    }\r\n\r\n    updateBrowserHistory() {\r\n        const { host, path } = this.props;\r\n        const url = encodeURI(`${host}/${path.join('/')}`);\r\n        const newState = {\r\n            host: host || '',\r\n            path,\r\n            index: this.stateIndex + 1,\r\n        };\r\n\r\n        this.history.push(`?url=${url}`, newState);\r\n    }\r\n\r\n    handlePop(location: Location<LocationState>) {\r\n        this.stateIndex = location.state.index;\r\n        this.props.handlePop(location);\r\n    }\r\n\r\n    handleReplace(location: Location<LocationState>) {\r\n        this.states[this.stateIndex] = location.state;\r\n    }\r\n\r\n    handlePush(location: Location<LocationState>) {\r\n        this.states = [...this.states.slice(0, ++this.stateIndex), location.state];\r\n    }\r\n\r\n    render() {\r\n        // This Component doesn't provide anything to the DOM\r\n        // The only reason it is a component is to get access to the state and dispatch\r\n        return <></>;\r\n    }\r\n}\r\n\r\ninterface LocationState extends MyLocation {\r\n    index: number;\r\n}\r\ninterface MyLocation {\r\n    host: string;\r\n    path: string[];\r\n}\r\n\r\n\r\ninterface StateProps {\r\n    host: string | null;\r\n    path: string[];\r\n}\r\ninterface DispatchProps {\r\n    handlePop(location: Location<LocationState>): void;\r\n}\r\ninterface HistoryHandlerProps extends StateProps, DispatchProps { }\r\n\r\n\r\nconst mapStateToProps = (state: AppState): StateProps => ({\r\n    host: state.account.host,\r\n    path: state.path\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: MyDispatch): DispatchProps => {\r\n    return {\r\n        handlePop: (location: Location<LocationState>) => {\r\n            let host = '';\r\n            let path: string[] = [];\r\n\r\n            if (location && typeof location.state !== typeof undefined) {\r\n                ({ host, path } = location.state);\r\n            }\r\n            else {\r\n                const params = new URLSearchParams(location.search.substr(1));\r\n                const url = params.get('url');\r\n                if (url !== null) {\r\n                    ({ host, path } = getLocationObjectFromUrl(url));\r\n                }\r\n            }\r\n            dispatch(setHost(host));\r\n            dispatch(enterFolder(path));\r\n        }\r\n    };\r\n};\r\n\r\nexport const getLocationObjectFromUrl = (urlString: string) => {\r\n    const url = new URL(urlString);\r\n    const host = url.origin;\r\n    const path = url.pathname.split('/').filter(val => val !== '');\r\n\r\n    return {\r\n        host,\r\n        path\r\n    };\r\n}\r\n\r\nconst locationsEqual = (first: MyLocation, second: MyLocation) => {\r\n    return first.host === second.host\r\n           && first.path.length === second.path.length\r\n           && first.path.every((val, index) => val === second.path[index]);\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HistoryHandler);\r\n","import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { connect } from 'react-redux';\r\nimport { solidLogin, setHost, enterFolder, solidLogout, clearCache, MyDispatch, setErrorMessage, closeDialog } from '../../../Actions/Actions';\r\nimport { getLocationObjectFromUrl } from '../../HistoryHandler/HistoryHandler';\r\nimport { DialogButtonClickEvent, DialogDispatchProps, DialogStateProps } from '../dialogTypes';\r\nimport { AppState } from '../../../Reducers/reducer';\r\nimport { DIALOGS } from '../../../Actions/actionTypes';\r\n\r\nclass FormDialog extends Component<ChooseLocationProps> {\r\n    state = {\r\n        location: '',\r\n    };\r\n\r\n    componentWillReceiveProps(props: ChooseLocationProps) {\r\n        const { isLoggedIn, webId } = props;\r\n        const params = new URLSearchParams(document.location.search.substr(1));\r\n        const encodedUrl = params.get('url');\r\n\r\n        if (encodedUrl !== null) {\r\n            const location = decodeURI(encodedUrl);\r\n            this.setState({ location });\r\n        }\r\n        else if (isLoggedIn && webId) {\r\n            const location = (new URL(webId)).origin;\r\n            this.setState({ location });\r\n        }\r\n    }\r\n\r\n    handleChange(event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>) {\r\n        const targetForm = event.currentTarget.form;\r\n        if (targetForm) {\r\n            const input = targetForm.querySelector('input');\r\n            if (input) {\r\n                const location = input.value;\r\n                this.setState({ location });\r\n                return;\r\n            }\r\n        }\r\n        console.log(\"Couldn't find location input\");\r\n    }\r\n\r\n    handleSubmit(event: DialogButtonClickEvent) {\r\n        this.props.handleSubmit(event, { location: this.state.location });\r\n    }\r\n\r\n    render() {\r\n        let { location } = this.state;\r\n        location = location ? location : '';\r\n        const { handleClose, handleLogin, handleLogout, open, isLoggedIn, webId } = this.props;\r\n\r\n        return (\r\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-choose-location\" fullWidth={true} maxWidth={'sm'}>\r\n                <form>\r\n                    <DialogTitle id=\"form-dialog-choose-location\">Choose the storage location</DialogTitle>\r\n                    <DialogContent>\r\n                        <Typography variant=\"body1\" gutterBottom>\r\n                            {!isLoggedIn ?\r\n                                \"If you want to access private resources, please login with the button below.\"\r\n                                : \"Logged in as \" + webId + \".\"\r\n                            }\r\n                        </Typography>\r\n                        {!isLoggedIn ?\r\n                            <Button variant=\"outlined\" color=\"primary\" onClick={handleLogin}>Login</Button>\r\n                            : <Button variant=\"outlined\" onClick={handleLogout}>Logout</Button>\r\n                        }\r\n\r\n                        <Typography variant=\"body1\">\r\n                            Please enter the directory you want to open below.\r\n                    </Typography>\r\n                        <TextField autoFocus fullWidth\r\n                            margin=\"normal\"\r\n                            label=\"Storage Location\"\r\n                            variant=\"outlined\"\r\n                            onChange={this.handleChange.bind(this)}\r\n                            value={location} />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={handleClose} color=\"primary\" type=\"button\">\r\n                            Cancel\r\n                    </Button>\r\n                        <Button color=\"primary\" type=\"submit\" onClick={this.handleSubmit.bind(this)}>\r\n                            Open directory\r\n                    </Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\ninterface StateProps extends DialogStateProps {\r\n    webId: string | null;\r\n    isLoggedIn: boolean;\r\n}\r\ninterface DispatchProps extends DialogDispatchProps {\r\n    handleLogin(event: DialogButtonClickEvent): void;\r\n    handleLogout(event: DialogButtonClickEvent): void;\r\n    handleSubmit(event: DialogButtonClickEvent, { location }: { location: string }): void;\r\n}\r\ninterface ChooseLocationProps extends StateProps, DispatchProps { }\r\n\r\n\r\nconst mapStateToProps = (state: AppState): StateProps => {\r\n    return {\r\n        open: state.visibleDialogs.CHOOSE_LOCATION,\r\n        webId: state.account.webId,\r\n        isLoggedIn: state.account.loggedIn\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: MyDispatch): DispatchProps => {\r\n    return {\r\n        handleClose: () => {\r\n            dispatch(closeDialog(DIALOGS.CHOOSE_LOCATION));\r\n        },\r\n        handleLogin: event => {\r\n            event.preventDefault();\r\n            dispatch(solidLogin());\r\n        },\r\n        handleLogout: event => {\r\n            event.preventDefault();\r\n            dispatch(solidLogout());\r\n        },\r\n        handleSubmit: (event, { location }) => {\r\n            event.preventDefault();\r\n            if (!location)\r\n                return dispatch(setErrorMessage(\"Please enter the folder which should be opened\"));\r\n\r\n            const { host, path } = getLocationObjectFromUrl(location);\r\n            dispatch(closeDialog(DIALOGS.CHOOSE_LOCATION));\r\n            dispatch(setHost(host));\r\n            dispatch(clearCache());\r\n            dispatch(enterFolder(path));\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\r\n","import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { connect } from 'react-redux';\r\nimport { closeDialog, MyDispatch, openDialog } from '../../../Actions/Actions';\r\nimport { DialogStateProps, DialogDispatchProps } from '../dialogTypes';\r\nimport { AppState } from '../../../Reducers/reducer';\r\nimport { DIALOGS } from '../../../Actions/actionTypes';\r\n\r\nclass FormDialog extends Component<ContentProps> {\r\n\r\n    state = {\r\n        lastBlobUrl: null,\r\n        content: '...',\r\n        loading: false\r\n    };\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.blobUrl !== this.state.lastBlobUrl) {\r\n            this.setState({\r\n                lastBlobUrl: this.props.blobUrl\r\n            });\r\n            this.setState({\r\n                loading: true\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { handleClose, open } = this.props;\r\n        return (\r\n          <div style={{marginLeft:'1em'}}>\r\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-content\" fullWidth={true} maxWidth={'sm'}>\r\n              <DialogTitle id=\"form-dialog-content\">Viewing file </DialogTitle>\r\n              <DialogContent>\r\n                <img src={this.props.blobUrl} alt=\"\" style={{maxWidth: '100%'}}/>\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button onClick={handleClose} color=\"primary\" type=\"button\">\r\n                  Close\r\n                </Button>\r\n              </DialogActions>\r\n            </Dialog>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\ninterface StateProps extends DialogStateProps {\r\n    blobUrl: string | undefined;\r\n}\r\ninterface DispatchProps extends DialogDispatchProps {}\r\ninterface ContentProps extends StateProps, DispatchProps {}\r\n\r\nconst mapStateToProps = (state: AppState): StateProps => {\r\n    return {\r\n        open: state.visibleDialogs.CONTENT,\r\n        blobUrl: state.blob || undefined\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: MyDispatch): DialogDispatchProps => {\r\n    return {\r\n        handleClose: () => {\r\n            dispatch(closeDialog(DIALOGS.CONTENT));\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\r\n","import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { connect } from 'react-redux';\r\nimport { MyDispatch, closeDialog } from '../../../Actions/Actions';\r\nimport Plyr from 'react-plyr';\r\nimport 'plyr/dist/plyr.css';\r\nimport { FileItem } from '../../../Api/Item';\r\nimport { DialogStateProps, DialogDispatchProps } from '../dialogTypes';\r\nimport { AppState } from '../../../Reducers/reducer';\r\nimport { DIALOGS } from '../../../Actions/actionTypes';\r\n\r\nclass FormDialog extends Component<MediaProps> {\r\n    render() {\r\n        const { file, handleClose, open } = this.props;\r\n\r\n        const fileName = file ? file.name : undefined;\r\n        const url = file ? file.url : undefined;\r\n        const provider = file ? (file.isVideo() ? 'html5' : 'audio') : '';\r\n        const type = file ? (file.isVideo() ? 'video' : 'audio') : undefined;\r\n\r\n        return (\r\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-display-media\" fullWidth={true} maxWidth={'lg'}>\r\n                <DialogTitle id=\"form-dialog-display-media\">Display Media</DialogTitle>\r\n                <DialogContent>\r\n                    {\r\n                        file ?\r\n                            (\r\n                                <div>\r\n                                    <p>Playing {file.name}</p>\r\n                                    <Plyr type={type} /*TODO: provider={provider}*/ url={url} iconUrl=\"./vendor/plyr/plyr.svg\" />\r\n                                </div>\r\n                            )\r\n                            : <p>No media file opened</p>\r\n                            \r\n                    }\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\" type=\"button\">\r\n                        Close\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\ninterface StateProps extends DialogStateProps {\r\n    file?: FileItem;\r\n}\r\ninterface MediaProps extends StateProps, DialogDispatchProps {}\r\n\r\n\r\nconst mapStateToProps = (state: AppState): StateProps => {\r\n    const open = state.visibleDialogs.MEDIA;\r\n\r\n    const file = state.items.selected[0];   \r\n\r\n    if (file instanceof FileItem) {\r\n            return {\r\n                open,\r\n                file,\r\n            };\r\n    }\r\n    return { open };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: MyDispatch): DialogDispatchProps => {\r\n    return {\r\n        handleClose: () => {\r\n            dispatch(closeDialog(DIALOGS.MEDIA));\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\r\n","import React, { Component, createRef } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { connect } from 'react-redux';\r\nimport { updateTextFile, MyDispatch, closeDialog } from '../../../Actions/Actions';\r\nimport { DialogStateProps, DialogDispatchProps, DialogButtonClickEvent } from '../dialogTypes';\r\nimport { AppState } from '../../../Reducers/reducer';\r\nimport { DIALOGS } from '../../../Actions/actionTypes';\r\nimport { Item } from '../../../Api/Item';\r\n\r\nclass FormDialog extends Component<EditProps> {\r\n    private textField: React.RefObject<HTMLTextAreaElement> = createRef();\r\n    state = {\r\n        lastBlobUrl: null as string|null,\r\n        content: null as string|null,\r\n        loading: false\r\n    };\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.blobUrl !== this.state.lastBlobUrl) {\r\n            this.setState({\r\n                lastBlobUrl: this.props.blobUrl\r\n            });\r\n            this.setState({\r\n                loading: true\r\n            });\r\n\r\n            this.props.blobUrl && fetch(this.props.blobUrl).then(r => {\r\n                return r.text();\r\n            }).then(t => {\r\n                this.setState({\r\n                    content: t\r\n                });\r\n                this.setState({\r\n                    loading: false\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    handleSave(event: DialogButtonClickEvent) {\r\n        event.preventDefault();\r\n        const textField = this.textField.current;\r\n        const item = this.props.item;\r\n        if (textField && item) {\r\n            const content = textField.value;\r\n            this.props.handleSubmit(event, {\r\n                itemName: item.name,\r\n                content\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { handleClose, open, item } = this.props;\r\n        const itemName = item ? item.getDisplayName() : 'No item selected';\r\n        const textAreaStyle = {\r\n            width: '100%',\r\n            minHeight: '300px'\r\n        };\r\n        const textArea = <textarea style={textAreaStyle} defaultValue={this.state.content || ''} ref={this.textField} />;\r\n\r\n        return (\r\n            <div>\r\n              <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-edit\" fullWidth={true} maxWidth={'sm'}>\r\n                <form>\r\n                  <DialogTitle id=\"form-dialog-edit\">Editing file: {itemName} </DialogTitle>\r\n                  <DialogContent>\r\n                    <DialogContentText>\r\n                      {this.state.loading ? 'Loading...' : textArea}\r\n                    </DialogContentText>\r\n                  </DialogContent>\r\n                  <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\" type=\"button\">\r\n                      Close\r\n                    </Button>\r\n                    <Button color=\"primary\" onClick={this.handleSave.bind(this)} type=\"submit\">\r\n                      Update\r\n                    </Button>\r\n                  </DialogActions>\r\n                </form>\r\n              </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\ninterface StateProps extends DialogStateProps {\r\n    item: Item;\r\n    blobUrl: string;\r\n}\r\ninterface DispatchProps extends DialogDispatchProps {\r\n    handleSubmit(event: DialogButtonClickEvent, { itemName, content }: { itemName: string, content: string }): void;\r\n}\r\ninterface EditProps extends StateProps, DispatchProps {}\r\n\r\nconst mapStateToProps = (state: AppState): StateProps => {\r\n    return {\r\n        open: state.visibleDialogs.EDIT, // TODO: rename visibleDialogs (e.g. to dialogIsOpen)\r\n        item: state.items.selected[0],\r\n        blobUrl: state.blob || ''\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: MyDispatch): DispatchProps => {\r\n    return {\r\n        handleClose: () => {\r\n            dispatch(closeDialog(DIALOGS.EDIT));\r\n        },\r\n        handleSubmit: (event, { itemName, content }) => {\r\n            dispatch(updateTextFile(itemName, content));\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\r\n","import React, { Component, createRef } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { connect } from 'react-redux';\r\nimport { createNewFolder, closeDialog, MyDispatch, setErrorMessage } from '../../../Actions/Actions';\r\nimport { DialogStateProps, DialogDispatchProps, DialogButtonClickEvent } from '../dialogTypes';\r\nimport { AppState } from '../../../Reducers/reducer';\r\nimport { DIALOGS } from '../../../Actions/actionTypes';\r\n\r\nclass FormDialog extends Component<CreateFolderProps> {\r\n    private textField: React.RefObject<HTMLInputElement> = createRef();\r\n\r\n    handleSubmit(event: DialogButtonClickEvent) {\r\n        const textField = this.textField.current;\r\n        if (textField) {\r\n            const folderName = textField.value;\r\n            this.props.handleSubmit(event, { folderName });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { handleClose, handleSubmit, open } = this.props;\r\n\r\n        return (\r\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-create-folder\" fullWidth={true} maxWidth={'sm'}>\r\n                <form>\r\n                    <DialogTitle id=\"form-dialog-create-folder\">Create folder</DialogTitle>\r\n                    <DialogContent>\r\n                        <TextField autoFocus fullWidth margin=\"dense\" label=\"Folder name\" type=\"text\" inputRef={this.textField} />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={handleClose} color=\"primary\" type=\"button\">\r\n                            Cancel\r\n                    </Button>\r\n                        <Button color=\"primary\" type=\"submit\" onClick={this.handleSubmit.bind(this)}>\r\n                            Save\r\n                    </Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\ninterface DispatchProps extends DialogDispatchProps {\r\n    handleSubmit(event: DialogButtonClickEvent, { folderName }: { folderName: string }): void;\r\n}\r\ninterface CreateFolderProps extends DialogStateProps, DispatchProps { }\r\n\r\nconst mapStateToProps = (state: AppState): DialogStateProps => {\r\n    return {\r\n        open: state.visibleDialogs.CREATE_FOLDER\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: MyDispatch): DispatchProps => {\r\n    return {\r\n        handleClose: () => {\r\n            dispatch(closeDialog(DIALOGS.CREATE_FOLDER));\r\n        },\r\n        handleSubmit: (event, { folderName }) => {\r\n            event.preventDefault();\r\n            dispatch(createNewFolder(folderName));\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\r\n","import React, { Component, createRef } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { connect } from 'react-redux';\r\nimport { createFile, closeDialog, MyDispatch, setErrorMessage } from '../../../Actions/Actions';\r\nimport { AppState } from '../../../Reducers/reducer';\r\nimport { DialogStateProps, DialogDispatchProps, DialogButtonClickEvent } from '../dialogTypes';\r\nimport { DIALOGS } from '../../../Actions/actionTypes';\r\n\r\nclass FormDialog extends Component<CreateFileProps> {\r\n    private textField: React.RefObject<HTMLInputElement> = createRef();\r\n\r\n    handleSubmit(event: DialogButtonClickEvent) {\r\n        const textField = this.textField.current;\r\n        if (textField) {\r\n            const fileName = textField.value;\r\n            this.props.handleSubmit(event, { fileName });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { handleClose, open } = this.props;\r\n\r\n        return (\r\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-create-file\" fullWidth={true} maxWidth={'sm'}>\r\n                <form>\r\n                    <DialogTitle id=\"form-dialog-create-file\">Create file</DialogTitle>\r\n                    <DialogContent>\r\n                        <TextField autoFocus fullWidth margin=\"dense\" label=\"File name\" type=\"text\" inputRef={this.textField}/>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={handleClose} color=\"primary\" type=\"button\">\r\n                            Cancel\r\n                    </Button>\r\n                        <Button color=\"primary\" type=\"submit\" onClick={this.handleSubmit.bind(this)}>\r\n                            Create\r\n                    </Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\ninterface DispatchProps extends DialogDispatchProps {\r\n    handleSubmit(event: DialogButtonClickEvent, { fileName }: { fileName: string }): void;\r\n}\r\ninterface CreateFileProps extends DialogStateProps, DispatchProps { }\r\n\r\nconst mapStateToProps = (state: AppState): DialogStateProps => {\r\n    return {\r\n        open: state.visibleDialogs.CREATE_FILE\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: MyDispatch): DispatchProps => {\r\n    return {\r\n        handleClose: () => {\r\n            dispatch(closeDialog(DIALOGS.CREATE_FILE));\r\n        },\r\n        handleSubmit: (event, { fileName }) => {\r\n            event.preventDefault();\r\n            dispatch(createFile(fileName));\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\r\n","import React, { Component, ChangeEvent, createRef } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { connect } from 'react-redux';\r\nimport { renameFile, renameFolder, MyDispatch, closeDialog } from '../../../Actions/Actions';\r\nimport { FolderItem, Item } from '../../../Api/Item';\r\nimport { DialogStateProps, DialogDispatchProps, DialogButtonClickEvent } from '../dialogTypes';\r\nimport { AppState } from '../../../Reducers/reducer';\r\nimport { DIALOGS } from '../../../Actions/actionTypes';\r\nclass FormDialog extends Component<RenameProps> {\r\n    private textField: React.RefObject<HTMLInputElement> = createRef();\r\n\r\n    handleSubmit(event: DialogButtonClickEvent) {\r\n        const textField = this.textField.current;\r\n        const item = this.props.item;\r\n        if (textField && item) {\r\n            const newName = textField.value;\r\n            this.props.handleSubmit(event, { item, newName });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { handleClose, open, item } = this.props;\r\n        const previousName = item ? item.name : '';\r\n\r\n        return (\r\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-create-folder\" fullWidth={true} maxWidth={'sm'}>\r\n                <form>\r\n                  <DialogTitle id=\"form-dialog-create-folder\">Rename</DialogTitle>\r\n                  <DialogContent>\r\n                    <TextField autoFocus fullWidth margin=\"dense\" label=\"Item name\" type=\"text\" inputRef={this.textField} defaultValue={previousName} />\r\n                  </DialogContent>\r\n                  <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\" type=\"button\">\r\n                      Cancel\r\n                    </Button>\r\n                    <Button color=\"primary\" type=\"submit\" onClick={this.handleSubmit.bind(this)}>\r\n                      Save\r\n                    </Button>\r\n                  </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\ninterface StateProps extends DialogStateProps {\r\n    item?: Item;\r\n}\r\ninterface DispatchProps extends DialogDispatchProps {\r\n    handleSubmit(event: DialogButtonClickEvent, { item, newName }: { item: Item, newName: string }): void;\r\n}\r\ninterface RenameProps extends StateProps, DispatchProps {}\r\n\r\n\r\nconst mapStateToProps = (state: AppState): StateProps => {\r\n    return {\r\n        open: state.visibleDialogs.RENAME,\r\n        item: state.items.selected[0],\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: MyDispatch): DispatchProps => {\r\n    return {\r\n        handleClose: () => {\r\n            dispatch(closeDialog(DIALOGS.RENAME));\r\n        },\r\n        handleSubmit: (event, { item, newName }) => {\r\n            event.preventDefault();\r\n            if (item instanceof FolderItem) // TODO: Create renameItem\r\n                dispatch(renameFolder(item.name, newName));\r\n            else\r\n                dispatch(renameFile(item.name, newName));\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\r\n","import React from 'react';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport FolderIcon from '@material-ui/icons/Folder';\r\nimport FileIcon from '@material-ui/icons/InsertDriveFile';\r\nimport blue from '@material-ui/core/colors/blue';\r\nimport '../File.css';\r\nimport { FileItem, Item } from '../../../Api/Item';\r\n\r\n// TODO: Check main differences between normal File.tsx component\r\nfunction FileSublist(props: OwnProps) {\r\n    const { item, isSelected, handleClick, handleDoubleClick } = props;\r\n    const avatarStyle = {\r\n        backgroundColor: isSelected ? blue['A200'] : undefined\r\n    };\r\n    return (\r\n        <div className=\"File\" onClick={handleClick} data-selected={isSelected} onDoubleClick={handleDoubleClick}>\r\n            <ListItem>\r\n                <ListItemAvatar>\r\n                    <Avatar style={avatarStyle}>\r\n                        { (item instanceof FileItem) ? <FileIcon /> : <FolderIcon />}\r\n                    </Avatar>\r\n                </ListItemAvatar>\r\n                <ListItemText primary={item.name} secondary=\"\" />\r\n            </ListItem>\r\n        </div>\r\n    );\r\n}\r\n\r\ninterface OwnProps {\r\n    item: Item;\r\n    isSelected: boolean;\r\n    handleClick(): void;\r\n    handleDoubleClick(): void;\r\n}\r\n\r\nexport default FileSublist;\r\n\r\n","import React from 'react';\r\nimport FileSublist from '../../File/FileSublist/FileSublist'; \r\nimport Loader from '../../Loader/Loader'; \r\nimport FileListEmptyMessage from '../FileListEmptyMessage';\r\nimport './FileListSublist.css'; \r\nimport { FolderItem } from '../../../Api/Item';\r\n\r\nfunction FileListSublist(props: OwnProps) {\r\n    const { items, isLoading, handleOpenFolder } = props;\r\n    \r\n    const itemComponents = items.map((item, key) => {\r\n        return <FileSublist\r\n            item={item}\r\n            isSelected={false}\r\n            handleClick={() => handleOpenFolder(item)}\r\n            handleDoubleClick={() => handleOpenFolder(item)}\r\n            key={key} />\r\n    });\r\n\r\n    return <div className=\"FileListSublist\">\r\n        { isLoading ? \r\n            <Loader /> : \r\n            itemComponents.length ? itemComponents : <FileListEmptyMessage />\r\n        }\r\n    </div>\r\n}\r\n\r\ninterface OwnProps {\r\n    items: FolderItem[];\r\n    isLoading: boolean;\r\n    handleOpenFolder(folder: FolderItem): void;\r\n}\r\n\r\nexport default FileListSublist;","import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FileListSublist from '../../FileList/FileListSublist/FileListSublist'; \r\nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\r\nimport { Item, FolderItem } from '../../../Api/Item';\r\nimport * as ApiHandler from '../../../Api/ApiHandler';\r\n\r\nclass FormDialog extends Component<OwnProps, OwnState> {\r\n    private host: string;\r\n    private path: string[];\r\n\r\n    constructor(props: OwnProps) {\r\n        super(props);\r\n        const { initialPath, initialHost } = props;\r\n        this.host = initialHost;\r\n        this.path = initialPath;\r\n\r\n        this.state = {\r\n            items: [],\r\n            isLoading: true,\r\n        };\r\n    }\r\n\r\n    componentDidUpdate(prevProps: OwnProps) {\r\n        if (prevProps.initialHost !== this.props.initialHost\r\n            || prevProps.initialPath.join('') !== this.props.initialPath.join('')) {\r\n            this.host = this.props.initialHost;\r\n            this.path = this.props.initialPath;\r\n            this.updateItems();\r\n        }\r\n    }\r\n\r\n    handleGoBack() {\r\n        this.path = this.path.slice(0, -1);\r\n        this.updateItems();\r\n    }\r\n\r\n    handleOpenFolder(folder: FolderItem) {\r\n        this.path = [...folder.path, folder.name];\r\n        this.updateItems();\r\n    }\r\n\r\n    async updateItems() {\r\n        this.setState({ isLoading: true });\r\n        const items = (await ApiHandler.getItemList(this.path.join('/')))\r\n            .filter(item => item instanceof FolderItem);\r\n\r\n        this.setState({ isLoading: false, items });\r\n    }\r\n\r\n    render() {\r\n        const { open, handleClose, handleSubmit, actionName } = this.props;\r\n        const { items, isLoading } = this.state;\r\n        const host = this.host;\r\n        const path = this.path;\r\n        const url = `${host}/${path.join('/')}`;\r\n        const canGoBack = path.length > 0;\r\n        \r\n        return (\r\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-move\" fullWidth={true} maxWidth={'sm'}>\r\n                <form>\r\n                    <DialogTitle id=\"form-dialog-move\">\r\n                        {actionName} items to <small style={{color: 'grey'}}>{ url }</small>\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                        <FileListSublist items={items} isLoading={isLoading} handleOpenFolder={this.handleOpenFolder.bind(this)}/>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleGoBack.bind(this)} color=\"primary\" type=\"button\" disabled={!canGoBack}>\r\n                            <KeyboardArrowLeftIcon /> Go back directory\r\n                        </Button>\r\n\r\n                        <Button onClick={handleClose} color=\"primary\" type=\"button\">\r\n                            Cancel\r\n                        </Button>\r\n                        <Button color=\"primary\" onClick={(e) => handleSubmit({ host, path })} type=\"submit\">\r\n                            {actionName}\r\n                        </Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\ninterface OwnProps {\r\n    open: boolean;\r\n    actionName: string;\r\n    initialHost: string;\r\n    initialPath: string[];\r\n    handleSubmit({ host, path }: { host: string, path: string[] }): void;\r\n    handleClose(): void;\r\n}\r\n\r\ninterface OwnState {\r\n    items: Item[];\r\n    isLoading: boolean;\r\n}\r\n\r\nexport default FormDialog;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { moveItems, closeDialog, MyDispatch } from '../../../Actions/Actions';\r\nimport { DialogStateProps } from '../dialogTypes';\r\nimport { Item } from '../../../Api/Item';\r\nimport { AppState } from '../../../Reducers/reducer';\r\nimport { DIALOGS } from '../../../Actions/actionTypes';\r\n\r\nimport ChooseLocation from '../ChooseLocation/ChooseLocation';\r\n\r\nfunction MoveDialog(props: MoveProps) {\r\n    const { initialHost, initialPath, selectedItems, open, handleClose, move } = props;\r\n\r\n    return <ChooseLocation\r\n        open={open}\r\n        actionName=\"Move\"\r\n        initialHost={initialHost}\r\n        initialPath={initialPath}\r\n        handleClose={handleClose}\r\n        handleSubmit={(location) => move(selectedItems, location)}\r\n    />\r\n}\r\n\r\n\r\ninterface StateProps extends DialogStateProps {\r\n    initialHost: string;\r\n    initialPath: string[];\r\n    selectedItems: Item[];\r\n}\r\ninterface DispatchProps {\r\n    handleClose(): void;\r\n    move(selectedItems: Item[], { host, path }: { host: string, path: string[] }): void;\r\n}\r\ninterface MoveProps extends StateProps, DispatchProps {}\r\n\r\n\r\n\r\nconst mapStateToProps = (state: AppState): StateProps => {\r\n    return {\r\n        open: state.visibleDialogs.MOVE,\r\n        initialHost: state.account.host || '',\r\n        initialPath: state.path,\r\n        selectedItems: state.items.selected,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: MyDispatch): DispatchProps => {\r\n    return {\r\n        handleClose: () => {\r\n            dispatch(closeDialog(DIALOGS.MOVE));\r\n        },\r\n        move: (selectedItems, targetLocation) => {\r\n            dispatch(moveItems(selectedItems, targetLocation));\r\n        },\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MoveDialog);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { copyItems, closeDialog, MyDispatch } from '../../../Actions/Actions';\r\nimport { DialogStateProps } from '../dialogTypes';\r\nimport { Item } from '../../../Api/Item';\r\nimport { AppState } from '../../../Reducers/reducer';\r\nimport { DIALOGS } from '../../../Actions/actionTypes';\r\n\r\nimport ChooseLocation from '../ChooseLocation/ChooseLocation';\r\n\r\nfunction CopyDialog(props: CopyProps) {\r\n    const { initialHost, initialPath, selectedItems, open, handleClose, copy } = props;\r\n\r\n    return <ChooseLocation\r\n        open={open}\r\n        actionName=\"Copy\"\r\n        initialHost={initialHost}\r\n        initialPath={initialPath}\r\n        handleClose={handleClose}\r\n        handleSubmit={(location) => copy(selectedItems, location)}\r\n    />\r\n}\r\n\r\n\r\ninterface StateProps extends DialogStateProps {\r\n    initialHost: string;\r\n    initialPath: string[];\r\n    selectedItems: Item[];\r\n}\r\ninterface DispatchProps {\r\n    handleClose(): void;\r\n    copy(selectedItems: Item[], { host, path }: { host: string, path: string[] }): void;\r\n}\r\ninterface CopyProps extends StateProps, DispatchProps {}\r\n\r\n\r\n\r\nconst mapStateToProps = (state: AppState): StateProps => {\r\n    return {\r\n        open: state.visibleDialogs.COPY,\r\n        initialHost: state.account.host || '',\r\n        initialPath: state.path,\r\n        selectedItems: state.items.selected,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: MyDispatch): DispatchProps => {\r\n    return {\r\n        handleClose: () => {\r\n            dispatch(closeDialog(DIALOGS.COPY));\r\n        },\r\n        copy: (selectedItems, targetLocation) => {\r\n            dispatch(copyItems(selectedItems, targetLocation));\r\n        },\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CopyDialog);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport FileIcon from '@material-ui/icons/InsertDriveFile';\r\nimport { getHumanFileSize } from '../../Api/Item';\r\n\r\nfunction UploadFileList(props: UploadFileListProps) {\r\n    const { files } = props;\r\n    files[0];\r\n    const list = Array.from(files).map((f, i) =>\r\n        <ListItem dense key={i}>\r\n            <ListItemIcon>\r\n                <FileIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary={`${f.name} (${getHumanFileSize(f.size)})`} />\r\n        </ListItem>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            <List component=\"nav\">\r\n                {list}\r\n            </List>\r\n        </div>\r\n    );\r\n}\r\n\r\ninterface UploadFileListProps {\r\n    files: FileList;\r\n}\r\n\r\nexport default UploadFileList;\r\n","import React, { Component, createRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from '@material-ui/core/Button';\r\nimport UploadFileList from './UploadFileList';\r\n\r\nclass FileUploader extends Component<FileUploadProps> {\r\n    inputRef: React.RefObject<HTMLInputElement> = createRef();\r\n\r\n    handleReset(event: React.MouseEvent<HTMLElement, MouseEvent> | React.TouchEvent): void {\r\n        const inputElement = this.inputRef.current;\r\n        if (inputElement) {\r\n            inputElement.value = '';\r\n            this.props.handleReset(event);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { fileList, handleSelectedFiles } = this.props;\r\n        const styles = {\r\n            inputfile: {\r\n                // TODO: Change this to display none as soon, as the label button works\r\n                // display: 'none'\r\n            }, inputreset: {\r\n                display: (fileList && fileList.length) ? 'inline-flex' : 'none'\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <label htmlFor=\"button-file\">\r\n                    <input style={styles.inputfile} id=\"button-file\" ref={this.inputRef} multiple type=\"file\" onChange={handleSelectedFiles} />\r\n                    {/*<Button component=\"span\" variant=\"contained\" color=\"primary\">\r\n                        Select Files\r\n                    </Button>*/}\r\n                </label>\r\n\r\n                <Button style={styles.inputreset} component=\"span\" type=\"reset\" onClick={this.handleReset.bind(this)}>\r\n                    Clear\r\n                </Button>\r\n\r\n                { fileList && <UploadFileList files={fileList} /> }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\ninterface FileUploadProps {\r\n    fileList: FileList|null;\r\n    handleReset(event: React.MouseEvent<HTMLElement, MouseEvent> | React.TouchEvent): void;\r\n    handleSelectedFiles(event: React.ChangeEvent<HTMLInputElement>): void;\r\n}\r\n\r\nexport default FileUploader;\r\n","import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport { connect } from 'react-redux';\r\nimport { resetFileUploader, uploadFiles, setFileUploadList, MyDispatch, resetFileUploadList, setErrorMessage } from '../../../Actions/Actions';\r\nimport FileUploader from '../../FileUploader/FileUploader';\r\nimport { DialogStateProps, DialogDispatchProps } from '../dialogTypes';\r\nimport { AppState } from '../../../Reducers/reducer';\r\n\r\nclass FormDialog extends Component<UploadFileProps> {\r\n\r\n    render() {\r\n        const { handleClose, handleReset, handleSubmit, open, canUpload, progress, fileList, handleSelectedFiles } = this.props;\r\n\r\n        return (\r\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-upload\" fullWidth={true} maxWidth={'sm'}>\r\n                <form>\r\n                    <DialogTitle id=\"form-dialog-upload\">\r\n                        Upload files\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                        <FileUploader fileList={fileList} handleSelectedFiles={handleSelectedFiles} handleReset={handleReset}/>\r\n                        {canUpload ? <LinearProgress variant=\"determinate\" value={progress} /> : null }\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={handleClose} color=\"primary\" type=\"button\">\r\n                            Cancel\r\n                        </Button>\r\n                        <Button color=\"primary\" onClick={handleSubmit} disabled={!canUpload} type=\"submit\">\r\n                            Upload\r\n                        </Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\ninterface StateProps extends DialogStateProps {\r\n    canUpload: boolean;\r\n    fileList: FileList|null;\r\n    progress: number;\r\n}\r\ninterface DispatchProps extends DialogDispatchProps {\r\n    handleSelectedFiles(event: React.ChangeEvent<HTMLInputElement>): void;\r\n    handleReset(): void;\r\n}\r\ninterface UploadFileProps extends StateProps, DispatchProps {}\r\n\r\n\r\nconst mapStateToProps = (state: AppState): StateProps => {\r\n    return {\r\n        open: state.visibleDialogs.UPLOAD_FILE,\r\n        canUpload: state.upload.fileList ? state.upload.fileList.length > 0 : false,\r\n        fileList: state.upload.fileList,\r\n        progress: state.upload.progress,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: MyDispatch): DispatchProps => {\r\n    return {\r\n        handleClose: (event) => {\r\n            dispatch(resetFileUploader());\r\n        },\r\n        handleSubmit: (event) => {\r\n            event.preventDefault();\r\n            dispatch(uploadFiles());\r\n        },\r\n        handleSelectedFiles: (event) => {\r\n            const files = event.target.files;\r\n            dispatch(setFileUploadList(files));\r\n        },\r\n        handleReset: () => {\r\n            dispatch(resetFileUploadList());\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\r\n","import React from 'react';\r\nimport DialogMenu from './Menu/Menu';\r\nimport DialogContent from './Content/Content';\r\nimport DialogMedia from './Media/Media';\r\nimport DialogEdit from './Edit/Edit';\r\nimport DialogCreateFolder from './CreateFolder/CreateFolder';\r\nimport DialogCreateFile from './CreateFile/CreateFile';\r\nimport DialogRename from './Rename/Rename';\r\nimport DialogMove from './Move/Move';\r\nimport DialogCopy from './Copy/Copy';\r\nimport DialogUploadFile from './UploadFile/UploadFile';\r\n\r\n// TODO: Consider moving the visibility logic here\r\nfunction Dialogs() {\r\n    return (\r\n        <div className=\"Dialogs\">\r\n            <DialogMenu />\r\n            <DialogContent />\r\n            <DialogMedia />\r\n            <DialogEdit />\r\n            <DialogCreateFolder />\r\n            <DialogCreateFile />\r\n            <DialogMove />\r\n            <DialogCopy />\r\n            <DialogRename />\r\n            <DialogUploadFile />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dialogs;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles, Theme, createStyles, WithStyles } from '@material-ui/core/styles';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { connect, MapDispatchToPropsFactory } from 'react-redux';\r\nimport { MyDispatch, resetErrorMessage } from '../../Actions/Actions';\r\nimport { AppState } from '../../Reducers/reducer';\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n  close: {\r\n    padding: theme.spacing.unit / 2,\r\n  },\r\n});\r\n\r\nclass DynamicSnackbar extends React.Component<DynamicSnackbarProps> {\r\n  render() {\r\n    const { classes, errorMsg, handleClose, open, notificationDuration } = this.props;\r\n    return (\r\n      <div>\r\n        <Snackbar\r\n          anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'left',\r\n          }}\r\n          open={open}\r\n          autoHideDuration={notificationDuration}\r\n          onClose={handleClose}\r\n          ContentProps={{\r\n            'aria-describedby': 'message-id',\r\n          }}\r\n          message={<span id=\"message-id\">{errorMsg}</span>}\r\n          action={[\r\n            <IconButton key=\"close\" aria-label=\"Close\" color=\"inherit\" className={classes.close} onClick={handleClose} >\r\n              <CloseIcon />\r\n            </IconButton>,\r\n          ]}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\ninterface StateProps {\r\n  open: boolean;\r\n  errorMsg: string;\r\n  notificationDuration: number;\r\n}\r\ninterface DispatchProps {\r\n  handleClose(): void;\r\n}\r\ninterface DynamicSnackbarProps extends StateProps, DispatchProps, WithStyles<typeof styles> {}\r\n\r\nconst mapStateToProps = (state: AppState): StateProps => {\r\n    return {\r\n        open: !!state.errorMessage,\r\n        errorMsg: state.errorMessage,\r\n        notificationDuration: 60000\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: MyDispatch): DispatchProps => {\r\n    return {\r\n        handleClose: () => {\r\n          dispatch(resetErrorMessage());\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(DynamicSnackbar));\r\n\r\n","import React, { Component } from 'react';\r\nimport FileList from './Components/FileList/FileList';\r\nimport Navbar from './Components/Navbar/Navbar';\r\nimport ContextMenu from './Components/ContextMenu/ContextMenu';\r\nimport Dialogs from './Components/Dialogs/Dialogs';\r\n\r\nimport { MuiThemeProvider as MaterialUI, createMuiTheme, WithStyles } from '@material-ui/core/styles';\r\nimport blue from '@material-ui/core/colors/blue';\r\nimport { connect } from 'react-redux';\r\nimport { initApp, MyDispatch, closeContextMenu } from './Actions/Actions';\r\nimport DynamicSnackbar from './Components/Notification/DynamicSnackbar';\r\nimport HistoryHandler from './Components/HistoryHandler/HistoryHandler';\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: blue,\r\n    },\r\n    typography: {\r\n        useNextVariants: true,\r\n    }\r\n});\r\n\r\nclass App extends Component<AppProps> {\r\n\r\n    componentDidMount() {\r\n        this.props.init();\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <MaterialUI theme={theme}>\r\n                    <div onClick={this.props.handleHideContextMenu} onContextMenu={this.props.handleHideContextMenu}>\r\n                        <Navbar />\r\n                        <FileList />\r\n                        <ContextMenu />\r\n                        <DynamicSnackbar />\r\n                        <Dialogs />\r\n                    </div>\r\n                </MaterialUI>\r\n                <HistoryHandler />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\ninterface DispatchProps {\r\n    init(): void;\r\n    handleHideContextMenu(event: React.MouseEvent<HTMLDivElement, MouseEvent>): void;\r\n}\r\n\r\ninterface AppProps extends DispatchProps {}\r\n\r\nconst mapStateToProps = () => ({});\r\n\r\nconst mapDispatchToProps = (dispatch: MyDispatch): DispatchProps => {\r\n    return {\r\n        init: () => {\r\n            dispatch(initApp());\r\n        },\r\n\r\n        handleHideContextMenu: (event) => {\r\n            const element = event.target as HTMLElement;\r\n            if (!(element.tagName === 'INPUT' || /label/i.test(element.className))) {\r\n                event.preventDefault();\r\n            }\r\n            dispatch(closeContextMenu());\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport thunk from 'redux-thunk';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware } from 'redux'\r\nimport reducer from './Reducers/reducer'\r\nimport * as serviceWorker from './serviceWorker';\r\nimport App from './App';\r\nimport './index.css';\r\nimport 'typeface-roboto';\r\n\r\nconst store = createStore(reducer, applyMiddleware(thunk));\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider >\r\n    , document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.register({\r\n    onUpdate: (config) => {\r\n        console.group('serviceWorker.onUpdate');\r\n        console.log(config);\r\n        console.groupEnd();\r\n    },\r\n    onSuccess: (config) => {\r\n        console.group('serviceWorker.onSuccess');\r\n        console.log(config);\r\n        console.groupEnd();\r\n    }\r\n});"],"sourceRoot":""}